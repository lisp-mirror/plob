/* ----------------------------------------------------------------------
| Script	make.server.in
| Author	Heiko Kirschke
|		mailto:Heiko.Kirschke@acm.org
| Date		1996/11/01
| Targets		server:
| Description	Make the server installation
|
| Copyright	PLOB! Copyright 1994--2002 Heiko Kirschke.
|		All rights reserved.
|
| Unlimited use, reproduction, modification and distribution of this
| software is permitted.  Any copy or modified version of this
| software must include both the above copyright notice of
| Heiko Kirschke and this paragraph; for each modified version, an
| additional statement must be added telling the year of modification
| and quoting the author of the modification.  Any distribution of
| this software must comply with all applicable German export control
| laws.  This software is made available AS IS, and HEIKO KIRSCHKE
| DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT
| LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
| A PARTICULAR PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION
| CONTAINED HEREIN, ANY LIABILITY FOR DAMAGES RESULTING FROM THE
| SOFTWARE OR ITS USE IS EXPRESSLY DISCLAIMED, WHETHER ARISING IN
| CONTRACT, TORT (INCLUDING NEGLIGENCE) OR STRICT LIABILITY, EVEN IF
| HEIKO KIRSCHKE IS ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
|
| Please note that these license terms adhere only to the code of
| PLOB!  itself. PLOB! uses POSTORE (Persistent Object Store) as a
| low-level persistent memory; it is provided in binary form within
| PLOB! with the permission of the University of St. Andrews
| (http://www-ppg.dcs.st-andrews.ac.uk/Default.html).  Contact the
| University of St. Andrews for getting their license terms on
| POSTORE.
|
| $Header$
|
 ---------------------------------------------------------------------- */

#define	relPlobDir	 .
#include		"./make.rules.in"

drule ( all, \
        server dash all, \
	silent $(BINDIR) slash plobconfig option1(conf) spc \
	$(CONFDIR) slash $(opsys) slash make dot vars dot in spc \
        option1(start) "$(DATAROOT)" )

rule ( server dash stage dash 0, \
       noDependencies, \
       silent $(BINDIR) slash plobconfig option1(conf) spc \
       $(CONFDIR) slash $(opsys) slash make dot vars dot in spc \
       option1(server) "$(DATAHOST)" )

rule ( server dash stage dash 1, \
       $(DEFAULTROOT) spc \
       $(DEFAULTROOT) slash fileExe(plobdadmin) spc \
       $(DEFAULTROOT) slash plobdmon spc \
       $(DEFAULTROOT) slash fileExe(plobd) spc \
       $(HOME) slash dot plobdrc, \
       noActions )

rule ( server dash all, \
       server dash stage dash 0, \
       $(MAKE_EXE) spc \
       $(MAKE_F) $(CONFDIR) slash $(opsys) slash make dot server spc \
       paste3(DEFAULTROOT,=,"`echo $(DEFAULTROOT)|sed 's/  *//g'`") spc \
       server dash stage dash 1 )

rule ( $(DEFAULTROOT), \
       noDependencies, \
       silent if [ ! option1(d) "$@" ]; then bsnl \
	  mkdir ruleTarget > /dev/null 2>&1; bsnl \
	  if [ ! option1(d) "$@" ]; then bsnl \
	    echo "*** Creating $@ failed."; bsnl \
	    echo "*** Check macro DATAROOT in file $(opsys)/make.vars.in"; bsnl \
	    exit 1; bsnl \
	  fi bsnl \
	fi )

rule ( $(BINDIR) slash $(opsys) slash fileExe(plobdadmin) spc \
       $(BINDIR) slash $(opsys) slash fileExe(plobd) spc \
       $(BINDIR) slash plobdmon, \
       noDependencies, \
       silent echo "*** Cannot read $@"; bsnl \
       echo "*** Please check if file $@ exists and copy it to"; bsnl \
       echo "*** $(DEFAULTROOT) on host `hostname` manually."; bsnl \
       exit 1 )

rule ( $(HOME) slash dot plobdrc,
       noDependencies, \
       silent echo "root $(DEFAULTROOT)" > ruleTarget; bsnl \
       echo "echo -n root is set to" >> ruleTarget; bsnl \
       echo "root" >> ruleTarget; bsnl \
       echo "url $(DEFAULTTRANS)://$(DEFAULTHOST)/$(DEFAULTBASE)" >> ruleTarget; bsnl \
       echo "echo -n url is set to" >> ruleTarget; bsnl \
       echo "url" >> ruleTarget )

MkCopyRule($(DEFAULTROOT) slash, \
           $(BINDIR) slash $(opsys) slash, \
           fileExe(plobdadmin))

MkCopyRule($(DEFAULTROOT) slash, \
           $(BINDIR) slash, \
	   plobdmon)

rule ( $(DEFAULTROOT) slash fileExe(plobd), \
       $(BINDIR) slash $(opsys) slash fileExe(plobd), \
       silent echo "cp -p $(BINDIR)/$(opsys)/plobd $@"; bsnl \
       cp option1(p) $(BINDIR) slash $(opsys) slash fileExe(plobd) \
          spc ruleTarget 2>/dev/null; bsnl \
       if [ $$? option2(ne,0) ]; then bsnl \
         echo "Copy failed, trying to stop server ..."; bsnl \
	   $(CONFDIR) slash $(opsys) slash plobdadmin \
	   option1(root) $(DEFAULTROOT) \
	   option1(close) option1(stop) >/dev/null 2>&1; bsnl \
	 cp option1(p) $(BINDIR) slash $(opsys) slash fileExe(plobd) \
	    spc ruleTarget 2>/dev/null; bsnl \
       fi; bsnl \
       if [ option1(r) "$@" ]; then bsnl \
         chmod paste3(ugo,+,x) ruleTarget; bsnl \
       fi )

/*
  Local variables:
  buffer-file-coding-system: raw-text-unix
  End:
*/
