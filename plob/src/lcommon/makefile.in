/*  ----------------------------------------------------------------------
|
|		PLOB - Persistent Lisp OBjects
|		       =	  =    ==
|
| Script	Makefile
| Targets		all:
|		Default target to build the splob.a library
|			opt:
|		Builds an optimized version of the splob.a library.
|			gprof:
|		Builds a profiled version of the splob.a library.
|			test:
|		Builds a stand-alone test program for testing the
|		PLOB C routines.
| Description	Code shared between RPC client and non-RPC local client
|
| Copyright	PLOB! Copyright 1994--2002 Heiko Kirschke.
|		All rights reserved.
|
| Unlimited use, reproduction, modification and distribution of this
| software is permitted.  Any copy or modified version of this
| software must include both the above copyright notice of
| Heiko Kirschke and this paragraph; for each modified version, an
| additional statement must be added telling the year of modification
| and quoting the author of the modification.  Any distribution of
| this software must comply with all applicable German export control
| laws.  This software is made available AS IS, and HEIKO KIRSCHKE
| DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT
| LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
| A PARTICULAR PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION
| CONTAINED HEREIN, ANY LIABILITY FOR DAMAGES RESULTING FROM THE
| SOFTWARE OR ITS USE IS EXPRESSLY DISCLAIMED, WHETHER ARISING IN
| CONTRACT, TORT (INCLUDING NEGLIGENCE) OR STRICT LIABILITY, EVEN IF
| HEIKO KIRSCHKE IS ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
|
| Please note that these license terms adhere only to the code of
| PLOB!  itself. PLOB! uses POSTORE (Persistent Object Store) as a
| low-level persistent memory; it is provided in binary form within
| PLOB! with the permission of the University of St. Andrews
| (http://www-ppg.dcs.st-andrews.ac.uk/Default.html).  Contact the
| University of St. Andrews for getting their license terms on
| POSTORE.
|
| $Header: /cvsroot/plob/plob/src/lcommon/makefile.in,v 1.4 2005/08/07 20:06:48 hkirschk Exp $
|
---------------------------------------------------------------------- */

#define	ccLocalOptions	paste5(-,D,BUILDDLL,=,1)

#define	relPlobDir	ddot slash ddot

#include		"filelist.in"
#include		"../../conf/make.rules.in"

/* ----------------------------------------------------------------------
| Settings for this makefile
 ---------------------------------------------------------------------- */

/* CFLAGS=$(COPTDEB) -Wall -Wno-return-type */
/* CFLAGS=$(COPTDEB) */
CFLAGS=$(COPTDEB) $(COPTOPT)
/* CFLAGS=-g -pg */
/* CFLAGS=$(COPTOPT) */

STDINCLUDE=\
 $(SRCIDIR) slash fileH(global) spc \
 $(SRCIDIR) slash fileH(hash) spc \
 $(SRCIDIR) slash fileH(generic) \
 $(SRCIDIR) slash fileH(plob)

#if HasOpSys == hasWin32

/* No position-independent code for Windows/NT: */
PICDIR=$(opsys)

#else

PICDIR=$(opsys) slash pic

#endif

LIBLCOMMONLIB=trim(fileLib(liblcommonplob))
LIBRARY=$(LIBDIR) slash $(LIBLCOMMONLIB)

OBJECTS=\
trim(PlobFiles($(opsys) slash lc,suffixObj))

SHAREDOBJECTS=\
trim(PlobFiles($(PICDIR) slash lc,suffixObj))

/* ----------------------------------------------------------------------
| Main targets
 ---------------------------------------------------------------------- */
drule ( all, \
	$(opsys) $(PICDIR) spc \
	$(OBJECTS) $(LIBRARY), \
	noActions )

rule ( $(LIBRARY), \
       $(SHAREDOBJECTS), \
       $(AR) $(ARFLAGS) $(OUTPUT_OPTION_LIB) $(SHAREDOBJECTS) nln \
       tab $(RANLIB) ruleTarget )

/* Build only the "normal" object files, i.e. no object code for the
   shared library: */
drule ( objects, \
	$(SHAREDOBJECTS), \
	noActions )

/* ----------------------------------------------------------------------
| Sub targets
 ---------------------------------------------------------------------- */

MkPlobObjects1($(opsys) slash,lc)
MkPlobObjects2($(opsys) slash,lc)
MkPlobObjects3($(opsys) slash,lc)
MkPlobObjects4($(opsys) slash,lc)

MkPlobSharedObjects1(lc)
MkPlobSharedObjects2(lc)
MkPlobSharedObjects3(lc)
MkPlobSharedObjects4(lc)

/* ----------------------------------------------------------------------
| Standard targets
 ---------------------------------------------------------------------- */
drule ( initial, \
	$(opsys) $(PICDIR), \
	noActions )
drule ( $(STDTARGETS), \
	noDependencies, \
	silent $(MAKE) default dash ruleTarget )

/*
  Local variables:
  file-buffer-coding-system: raw-text-unix
  End:
*/
