# --------------------------------------------------------------------------
# NOTE: This makefile was generated by plobimake;
# ===== changes done directly to this file will be lost!
# --------------------------------------------------------------------------
PLOBDIR=/home/hkirschk/plob-2.09
FRANZCL=/opt/acl50
OPSYS=LINUX
opsys=linux
CC=gcc
COPTPIC=-fPIC
COPTDEB=-g2
COPTOPT=-O2
CPP=gcc -E -P
LDLIBS=
RELPLOBDIR=../..
BINDIR=$(RELPLOBDIR)/bin
CONFDIR=$(RELPLOBDIR)/conf
RULES=$(CONFDIR)/make.rules.in
LIBDIR=$(RELPLOBDIR)/lib/$(opsys)
PSDIR=$(RELPLOBDIR)/ps
SRCDIR=$(RELPLOBDIR)/src
SRCIDIR=$(SRCDIR)/include
LISPDOCDIR=$(SRCDIR)/lisp-doc
TEXDIR=$(RELPLOBDIR)/tex
TEXIDIR=$(TEXDIR)/inputs
RPC_PROGRAM=0x20506E62
RPC_VERSION=1
HASAUTH=AUTH_NONE
AR=ar
ARFLAGS=rv
LINK=$(CC)
LINKc=$(LINK) $(LDFLAGS)
MAKE_EXE=make
MAKE_F= -f
MAKE_FILE=$(opsys)/makefile
MAKE=$(MAKE_EXE) $(MAKE_F) $(MAKE_FILE)
RANLIB=ranlib
LDSHAREDOPT=-shared
STDTARGETS=all clean dist-clean initial makefiles
SHELL=/bin/sh
C2RPC=$(BINDIR)/c2rpc -CPP   '$(CPP)' -I$(BINDIR)   -P   $(RPC_PROGRAM) -V   $(RPC_VERSION) $(C2RPCFLAGS)
C2LISP=$(BINDIR)/c2lisp -CPP   '$(CPP)' -I$(BINDIR)   $(C2LISPFLAGS)
SUFFIXES= .so .a .o \
	 .x .lisp .c .h \
	 .bbl .aux \
	 .ps .eps .dvi .dgr .tex
DEFAULTHOST=localhost
DEFAULTTRANS=tcp
DEFAULTROOT=/opt/data/plob
DEFAULTBASE=database
COMPILEc=$(CC) $(CFLAGS) $(CPPFLAGS)
OUTPUT_OPTION_OBJ= -c   -o    $@
OUTPUT_OPTION_LIB=  $@
OUTPUT_OPTION_DLL= $(LDSHAREDOPT) -o    $@
OUTPUT_OPTION_EXE= -o    $@
CPPFLAGS=  -I$(opsys)    -I$(SRCIDIR) -DDATABASE='"$(DEFAULTBASE)"' -D$(OPSYS)=1 -DOPSYS='"$(OPSYS)"' -DHASAUTH=$(HASAUTH) -DBUILDDLL=1
RPCGEN=rpcgen
RPCGENFLAGS=  -D$(OPSYS)=1
all :: 
MAKECMD=fnCallMake() { \
set +e; \
status="0"; \
dirs="$$1"; \
if [ -n   "$$2" ]; then \
shift; \
args="$$*"; \
fi; \
if [ -d   "$(BINDIR)" ]; then \
PATH="$(BINDIR):$${PATH}"; export PATH; \
elif [ -d   "bin" ]; then \
PATH="`pwd`/bin:$${PATH}"; export PATH; \
fi; \
case "$(MAKEFLAGS)" in \
''|'-'*)	szMakeflags="$(MAKEFLAGS)";; \
*)		szMakeflags="-$(MAKEFLAGS)";; \
esac; \
if [ "$${szMakeflags}" = "-w" ]; then \
szMakeflags="--no-print-directory"; \
else \
szMakeflags=""; \
fi; \
if [ ! -r   "$(opsys)/makefile" ]; then \
echo "Making bootstrap makefile"; \
plobimake -CPP "$(CPP)"   -I "$(CONFDIR)/$(opsys)"   -o "$(opsys)/makefile"   "makefile.in"; \
fi; \
for dir in $${dirs} ; do \
if [ ! -r   "$${dir}/$(opsys)/makefile" ]; then \
echo "Making bootstrap makefile in $${dir}"; \
plobimake -CPP "$(CPP)"   -I "$(CONFDIR)/$(opsys)"   -o "$${dir}/$(opsys)/makefile"   "$${dir}/makefile.in"; \
fi; \
( \
echo "cd `pwd`/$${dir}"; \
cd "$${dir}"; \
$(MAKE_EXE) $${szMakeflags}  $(MAKE_F) "$(opsys)/makefile" $${args} ; \
); \
s="$$?"; \
if [ "$${s}" -ne   0 ]; then \
status="$$s"; \
fi; \
done; \
return $${status} ; \
}; fnCallMake
LNCMD=fnCallLn() { \
set +e; \
for file in $${*} ; do \
target="`basename $${file}`"; \
if [ ! -r   "$${target}" ]; then \
cmd="ln -s $${file} $${target}"; \
echo "$${cmd}"; $${cmd} ; \
fi \
done; \
return 0; \
}; fnCallLn
RMCMD=fnCallRm() { \
set +e; \
if [ -r   "$$2" ]; then \
echo ""; \
echo "$$1"; \
echo -n   "Answer 'yes' if this is ok. "; \
read answer; \
if [ "$${answer}" != "yes" ]; then \
echo ""; \
echo "Canceled $@"; \
exit 255; \
fi; \
fi; \
shift; \
echo "rm $$*"; \
rm $${*} ; \
return 0; \
}; fnCallRm
GZIP=gzip
GZIPCMD=fnCallGZip() { \
set +e; \
status="0"; \
trap "mv $<.$$$$ $<" 1 2 15; \
cmd="cp $< $<.$$$$"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; status="$$?"; \
if [ "$${status}" -eq   0 ]; then \
cmd="$(GZIP) $(GZIPFLAGS) -f $<"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; status="$$?"; \
if [ "$${status}" -eq   0 ]; then \
cmd="mv $<.$$$$ $<; touch $@"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; \
else \
cmd="rm -f $@ $<.$$$$"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; \
fi; \
fi; \
return $${status} ; \
}; fnCallGZip
ASSERTTOPLEVEL= \
PWD="`pwd`"; \
if [ ! -d   "src/include/allegro5" ]; then \
echo "*** "'`'"make $@' can be called only" 1>&2; \
echo "*** in the top-level directory of PLOB!" 1>&2; \
exit 1; \
fi; \
PATH="$${PWD}/bin:$${PATH}"; export PATH
config shipout : 
	@$(ASSERTTOPLEVEL); \
plobconfig -$@
standard-config : 
	@$(ASSERTTOPLEVEL); \
plobconfig -config   -standard
advanced-config : 
	@$(ASSERTTOPLEVEL); \
plobconfig -config   -advanced
ADDBINDIR=if [ -d   "bin" ]; then \
	    BINPATH="`pwd`/bin"; \
	  elif [ -d   "../bin" ]; then \
	    BINPATH="`(cd ../bin;pwd)`"; \
	  elif [ -d   "../../bin" ]; then \
	    BINPATH="`(cd ../../bin;pwd)`"; \
	  fi; \
	  PATH="$${BINPATH}:$${PATH}"; export PATH
$(CONFDIR)/$(opsys)/make.server : $(RULES)        $(CONFDIR)/make.server.in $(CONFDIR)/$(opsys)/make.vars.in
	@$(ADDBINDIR); \
echo "plobimake -CPP \"$(CPP)\" -I $(CONFDIR)/$(opsys) -o $@ $(CONFDIR)/make.server.in"; \
$${BINPATH}/plobimake -CPP "$(CPP)" -I "$(CONFDIR)/$(opsys)" -o $@      "$(CONFDIR)/make.server.in"
server : $(CONFDIR)/$(opsys)/make.server
	@$(MAKE_EXE) $(MAKE_F) "$(CONFDIR)/$(opsys)/make.server"
tex-log-directory : log
bin log $(CONFDIR)/$(opsys) $(opsys) $(opsys)/pic : 
	@if [ ! -d   "$@" ]; then \
echo "mkdir $@"; \
mkdir  $@   ; \
fi
default-all :: 
default-clean :: 
	-rm -f   *~ core a.out gmon.out *.log log/*
default-dist-clean :: clean
	-rm -f     *.a       *.o *.so     *.fsl *.fasl *.wfasl
default-initial :: $(opsys)
$(RULES) : 
$(CONFDIR)/make.server.in : 
GETMAKEVARSCMD=fnCallGetMakeVars() { \
echo 'Looking for old configuration file, please wait ...'; \
szOldConfFile="`ls -1t $$1/../../*/conf/$(opsys)/make.vars.in 2>/dev/null|head -1`"; \
if [ -r   "$${szOldConfFile}" ]; then \
szOldConfDir="`dirname $${szOldConfFile}`"; \
szOldConfFile="`(cd $${szOldConfDir}; pwd)`/`basename $${szOldConfFile}`"; \
echo "Using old configuration file $${szOldConfFile}"; \
cp -p   "$${szOldConfFile}" "$$2"; \
fi; \
if [ ! -r   "$$2" ]; then \
cp -p   "$$1/make.vars.def" "$$2"; \
fi; \
}; fnCallGetMakeVars
$(CONFDIR)/$(opsys)/make.vars.in : 
	@if [ -d   "$(CONFDIR)" ]; then \
$(GETMAKEVARSCMD) $(CONFDIR)  $@   ; \
elif [ -r   "conf/make.vars.def" -a   ! -r   "conf/make.vars.in" ]; then \
$(GETMAKEVARSCMD) conf $(CONFDIR)/$(opsys)/make.vars.in; \
fi
makefile default-makefiles :: makefile.in $(RULES)         $(CONFDIR)/$(opsys)/make.vars.in
	@$(ADDBINDIR); \
echo "plobimake -CPP '$(CPP)' -I $(CONFDIR)/$(opsys) -o $(opsys)/makefile makefile.in"; \
$${BINPATH}/plobimake -CPP "$(CPP)" -I "$(CONFDIR)/$(opsys)" -o "$(opsys)/makefile" "makefile.in"
ALLOPSYS=irix linux solaris win32
MKMAKEFILE=fnMkMakefile() { \
set +e; \
echo ''; \
echo "Making makefiles for $${1}"; \
if [ ! -r   "$(CONFDIR)/$${1}/make.vars.in" ]; then \
if [ -r   "$(CONFDIR)/$${1}/make.vars.def" ]; then \
cp -p   "$(CONFDIR)/$$1/make.vars.def" "$(CONFDIR)/$${1}/make.vars.in"; \
elif [ -r   "$(CONFDIR)/make.vars.def" ]; then \
cp -p   "$(CONFDIR)/make.vars.def" "$(CONFDIR)/$${1}/make.vars.in"; \
fi; \
fi; \
if [ ! -r   "$${1}/makefile" ]; then \
echo "Making bootstrap makefile for $${1}"; \
plobimake -CPP "$(CPP)"   -I "$(CONFDIR)/$${1}" -o "$${1}/makefile" "makefile.in"; \
fi; \
$(MAKE_EXE) $(MAKE_F) "$${1}/makefile" makefiles; \
}
all-makefiles : 
	@$(ADDBINDIR); \
$(MKMAKEFILE); \
for o in $(ALLOPSYS); do \
fnMkMakefile $${o} ; \
done
CFLAGS=$(COPTDEB) $(COPTOPT)
STDINCLUDE= $(SRCIDIR)/c2c.h $(SRCIDIR)/global.h $(SRCIDIR)/hash.h $(SRCIDIR)/generic.h cplob.h ../include/plobconst.h ../include/plobintern.h
cplobrootDeps=$(SRCIDIR)/plobversion.h
PICDIR=$(opsys)/pic
OBJECTS=$(opsys)/cplobroot.o $(opsys)/cplobadmin.o $(opsys)/cplob.o $(opsys)/cplobmisc.o $(opsys)/cplobff.o $(opsys)/cplobsequ.o $(opsys)/cplobstruct.o $(opsys)/cplobclos.o $(opsys)/cplobtype.o $(opsys)/cplobnumber.o $(opsys)/cploblock.o $(opsys)/cplobheap.o $(opsys)/cplobbtree.o
COMMONOBJECTS=../common/$(opsys)/global.o ../common/$(opsys)/trmalloc.o ../common/$(opsys)/hash.o ../common/$(opsys)/generic.o ../common/$(opsys)/plobroot.o ../common/$(opsys)/plobadmin.o ../common/$(opsys)/plob.o ../common/$(opsys)/plobmisc.o ../common/$(opsys)/plobff.o ../common/$(opsys)/plobsequ.o ../common/$(opsys)/plobstruct.o ../common/$(opsys)/plobclos.o ../common/$(opsys)/plobtype.o ../common/$(opsys)/plobnumber.o ../common/$(opsys)/ploblock.o ../common/$(opsys)/plobheap.o ../common/$(opsys)/plobbtree.o
LCOMMONOBJECTS=../lcommon/$(opsys)/lcplobroot.o ../lcommon/$(opsys)/lcplobadmin.o ../lcommon/$(opsys)/lcplob.o ../lcommon/$(opsys)/lcplobmisc.o ../lcommon/$(opsys)/lcplobff.o ../lcommon/$(opsys)/lcplobsequ.o ../lcommon/$(opsys)/lcplobstruct.o ../lcommon/$(opsys)/lcplobclos.o ../lcommon/$(opsys)/lcplobtype.o ../lcommon/$(opsys)/lcplobnumber.o ../lcommon/$(opsys)/lcploblock.o ../lcommon/$(opsys)/lcplobheap.o ../lcommon/$(opsys)/lcplobbtree.o
LIBFILES=$(OBJECTS) $(opsys)/plobdclnt.o ../common/$(opsys)/plobdxdr.o ../common/$(opsys)/plobpxdr.o $(COMMONOBJECTS) $(LCOMMONOBJECTS)
LIBRPCLIENTLIB=librpclientplob.a
LIBRARY=$(LIBDIR)/$(LIBRPCLIENTLIB)
SHAREDOBJECTS=$(PICDIR)/cplobroot.o $(PICDIR)/cplobadmin.o $(PICDIR)/cplob.o $(PICDIR)/cplobmisc.o $(PICDIR)/cplobff.o $(PICDIR)/cplobsequ.o $(PICDIR)/cplobstruct.o $(PICDIR)/cplobclos.o $(PICDIR)/cplobtype.o $(PICDIR)/cplobnumber.o $(PICDIR)/cploblock.o $(PICDIR)/cplobheap.o $(PICDIR)/cplobbtree.o
SHAREDCOMMONOBJECTS=../common/$(PICDIR)/global.o ../common/$(PICDIR)/trmalloc.o ../common/$(PICDIR)/hash.o ../common/$(PICDIR)/generic.o ../common/$(PICDIR)/plobroot.o ../common/$(PICDIR)/plobadmin.o ../common/$(PICDIR)/plob.o ../common/$(PICDIR)/plobmisc.o ../common/$(PICDIR)/plobff.o ../common/$(PICDIR)/plobsequ.o ../common/$(PICDIR)/plobstruct.o ../common/$(PICDIR)/plobclos.o ../common/$(PICDIR)/plobtype.o ../common/$(PICDIR)/plobnumber.o ../common/$(PICDIR)/ploblock.o ../common/$(PICDIR)/plobheap.o ../common/$(PICDIR)/plobbtree.o
LSHAREDCOMMONOBJECTS=../lcommon/$(PICDIR)/lcplobroot.o ../lcommon/$(PICDIR)/lcplobadmin.o ../lcommon/$(PICDIR)/lcplob.o ../lcommon/$(PICDIR)/lcplobmisc.o ../lcommon/$(PICDIR)/lcplobff.o ../lcommon/$(PICDIR)/lcplobsequ.o ../lcommon/$(PICDIR)/lcplobstruct.o ../lcommon/$(PICDIR)/lcplobclos.o ../lcommon/$(PICDIR)/lcplobtype.o ../lcommon/$(PICDIR)/lcplobnumber.o ../lcommon/$(PICDIR)/lcploblock.o ../lcommon/$(PICDIR)/lcplobheap.o ../lcommon/$(PICDIR)/lcplobbtree.o
SHAREDLIBFILES=$(SHAREDOBJECTS) $(PICDIR)/plobdclnt.o ../common/$(PICDIR)/plobdxdr.o ../common/$(PICDIR)/plobpxdr.o $(SHAREDCOMMONOBJECTS) $(LSHAREDCOMMONOBJECTS)
LIBRPCLIENTPLOBDLL=librpclientplob.so
SHAREDLIBRARY=$(LIBDIR)/$(LIBRPCLIENTPLOBDLL)
all :: $(opsys) $(PICDIR) $(opsys)/plobd.h objects $(SHAREDLIBRARY) $(LIBRARY)
dll : $(SHAREDLIBRARY)
objects : $(OBJECTS) $(opsys)/plobdclnt.o
$(opsys)/cplobroot.o : cplobroot.c cplobroot.h $(SRCIDIR)/plobroot.h $(cplobrootDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobroot.c
$(opsys)/cplobadmin.o : cplobadmin.c cplobadmin.h $(SRCIDIR)/plobadmin.h $(cplobadminDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobadmin.c
$(opsys)/cplob.o : cplob.c cplob.h $(SRCIDIR)/plob.h $(cplobDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplob.c
$(opsys)/cplobmisc.o : cplobmisc.c cplobmisc.h $(SRCIDIR)/plobmisc.h $(cplobmiscDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobmisc.c
$(opsys)/cplobff.o : cplobff.c cplobff.h $(SRCIDIR)/plobff.h $(cplobffDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobff.c
$(opsys)/cplobsequ.o : cplobsequ.c cplobsequ.h $(SRCIDIR)/plobsequ.h $(cplobsequDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobsequ.c
$(opsys)/cplobstruct.o : cplobstruct.c cplobstruct.h $(SRCIDIR)/plobstruct.h $(cplobstructDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobstruct.c
$(opsys)/cplobclos.o : cplobclos.c cplobclos.h $(SRCIDIR)/plobclos.h $(cplobclosDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobclos.c
$(opsys)/cplobtype.o : cplobtype.c cplobtype.h $(SRCIDIR)/plobtype.h $(cplobtypeDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobtype.c
$(opsys)/cplobnumber.o : cplobnumber.c cplobnumber.h $(SRCIDIR)/plobnumber.h $(cplobnumberDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobnumber.c
$(opsys)/cploblock.o : cploblock.c cploblock.h $(SRCIDIR)/ploblock.h $(cploblockDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cploblock.c
$(opsys)/cplobheap.o : cplobheap.c cplobheap.h $(SRCIDIR)/plobheap.h $(cplobheapDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobheap.c
$(opsys)/cplobbtree.o : cplobbtree.c cplobbtree.h $(SRCIDIR)/plobbtree.h $(cplobbtreeDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) cplobbtree.c
$(LIBRARY) : $(LIBFILES)
	$(AR) $(ARFLAGS) $(OUTPUT_OPTION_LIB) $(LIBFILES)
	$(RANLIB)  $@
$(opsys)/plobdclnt.c : ../server/plobd.x
	rm -f    $@
	cd .. && cd server && $(RPCGEN) $(RPCGENFLAGS)   -l -o ../client/$@      plobd.x
$(opsys)/plobd.h : ../server/plobd.x
	rm -f    $@
	cd .. && cd server && $(RPCGEN) $(RPCGENFLAGS)   -h -o ../client/$@      plobd.x
$(opsys)/plobdclnt.o : $(opsys)/plobdclnt.c        $(opsys)/plobd.h
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) $(opsys)/plobdclnt.c
$(PICDIR)/plobdclnt.o : $(opsys)/plobdclnt.c $(opsys)/plobd.h
	$(COMPILEc)   $(COPTPIC) $(OUTPUT_OPTION_OBJ) $(opsys)/plobdclnt.c
$(opsys)/librpclientplob.res : librpclientplob.rc ../server/mop-inside.ico $(SRCIDIR)/plobversion.h
	rc -r   -fo $@ -I$(SRCIDIR) -I$(MSVCPATH)/mfc/include -I$(MSVCPATH)/include librpclientplob.rc
$(opsys)/pic/cplobroot.o : cplobroot.c cplobroot.h $(SRCIDIR)/plobroot.h $(cplobrootDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobroot.c
$(opsys)/pic/cplobadmin.o : cplobadmin.c cplobadmin.h $(SRCIDIR)/plobadmin.h $(cplobadminDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobadmin.c
$(opsys)/pic/cplob.o : cplob.c cplob.h $(SRCIDIR)/plob.h $(cplobDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplob.c
$(opsys)/pic/cplobmisc.o : cplobmisc.c cplobmisc.h $(SRCIDIR)/plobmisc.h $(cplobmiscDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobmisc.c
$(opsys)/pic/cplobff.o : cplobff.c cplobff.h $(SRCIDIR)/plobff.h $(cplobffDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobff.c
$(opsys)/pic/cplobsequ.o : cplobsequ.c cplobsequ.h $(SRCIDIR)/plobsequ.h $(cplobsequDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobsequ.c
$(opsys)/pic/cplobstruct.o : cplobstruct.c cplobstruct.h $(SRCIDIR)/plobstruct.h $(cplobstructDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobstruct.c
$(opsys)/pic/cplobclos.o : cplobclos.c cplobclos.h $(SRCIDIR)/plobclos.h $(cplobclosDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobclos.c
$(opsys)/pic/cplobtype.o : cplobtype.c cplobtype.h $(SRCIDIR)/plobtype.h $(cplobtypeDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobtype.c
$(opsys)/pic/cplobnumber.o : cplobnumber.c cplobnumber.h $(SRCIDIR)/plobnumber.h $(cplobnumberDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobnumber.c
$(opsys)/pic/cploblock.o : cploblock.c cploblock.h $(SRCIDIR)/ploblock.h $(cploblockDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cploblock.c
$(opsys)/pic/cplobheap.o : cplobheap.c cplobheap.h $(SRCIDIR)/plobheap.h $(cplobheapDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobheap.c
$(opsys)/pic/cplobbtree.o : cplobbtree.c cplobbtree.h $(SRCIDIR)/plobbtree.h $(cplobbtreeDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) cplobbtree.c
$(SHAREDLIBRARY) : $(SHAREDLIBFILES) 
	$(LINKc) $(OUTPUT_OPTION_DLL) $(SHAREDLIBFILES) $(LDLIBS)
test :: $(opsys)/cplobtest
$(opsys)/cplobtest.o : cplobtest.c ../include/plobheap.h ../include/plobbtree.h $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ)        -I. cplobtest.c
$(opsys)/cplobtest : $(opsys)/cplobtest.o $(LIBDIR)/$(LIBRPCLIENTLIB) $(LIBDIR)/$(LIBPLOB)
	$(LINKc) $(OUTPUT_OPTION_EXE)     $(opsys)/cplobtest.o -L$(LIBDIR)   	       -lplob   -lcplob        $(LDLIBS)
initial :: $(opsys) $(PICDIR)
$(STDTARGETS) :: 
	@$(MAKE) default-$@
