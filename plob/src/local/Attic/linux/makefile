# --------------------------------------------------------------------------
# NOTE: This makefile was generated by plobimake;
# ===== changes done directly to this file will be lost!
# --------------------------------------------------------------------------
PLOBDIR=/home/hkirschk/plob-2.09
FRANZCL=/opt/acl50
OPSYS=LINUX
opsys=linux
CC=gcc
COPTPIC=-fPIC
COPTDEB=-g2
COPTOPT=-O2
CPP=gcc -E -P
LDLIBS=
RELPLOBDIR=../..
BINDIR=$(RELPLOBDIR)/bin
CONFDIR=$(RELPLOBDIR)/conf
RULES=$(CONFDIR)/make.rules.in
LIBDIR=$(RELPLOBDIR)/lib/$(opsys)
PSDIR=$(RELPLOBDIR)/ps
SRCDIR=$(RELPLOBDIR)/src
SRCIDIR=$(SRCDIR)/include
LISPDOCDIR=$(SRCDIR)/lisp-doc
TEXDIR=$(RELPLOBDIR)/tex
TEXIDIR=$(TEXDIR)/inputs
RPC_PROGRAM=0x20506E62
RPC_VERSION=1
HASAUTH=AUTH_NONE
AR=ar
ARFLAGS=rv
LINK=$(CC)
LINKc=$(LINK) $(LDFLAGS)
MAKE_EXE=make
MAKE_F= -f
MAKE_FILE=$(opsys)/makefile
MAKE=$(MAKE_EXE) $(MAKE_F) $(MAKE_FILE)
RANLIB=ranlib
LDSHAREDOPT=-shared
STDTARGETS=all clean dist-clean initial shipoutconf makefiles
SHELL=/bin/sh
C2RPC=$(BINDIR)/c2rpc -CPP   '$(CPP)' -I$(BINDIR)   -P   $(RPC_PROGRAM) -V   $(RPC_VERSION) $(C2RPCFLAGS)
C2LISP=$(BINDIR)/c2lisp -CPP   '$(CPP)' -I$(BINDIR)   $(C2LISPFLAGS)
SUFFIXES= .so .a .o  \
	 .x .lisp .c .h \
	 .bbl .aux \
	 .ps .eps .dvi .dgr .tex
DEFAULTHOST=localhost
DEFAULTTRANS=tcp
DEFAULTROOT=/opt/data/plob
DEFAULTBASE=database
COMPILEc=$(CC) $(CFLAGS) $(CPPFLAGS)
OUTPUT_OPTION_OBJ= -c   -o    $@
OUTPUT_OPTION_LIB=  $@
OUTPUT_OPTION_DLL= $(LDSHAREDOPT) -o    $@
OUTPUT_OPTION_EXE= -o    $@
CPPFLAGS=  -I$(opsys)    -I$(SRCIDIR) -DDATABASE='"$(DEFAULTBASE)"' -D$(OPSYS)=1 -DOPSYS='"$(OPSYS)"' -DHASAUTH=$(HASAUTH) -DBUILDDLL=1 -I../server/$(opsys)
RPCGEN=rpcgen
RPCGENFLAGS=  -D$(OPSYS)=1
all :: 
MAKECMD=fnCallMake() { \
set +e; \
status="0"; \
dirs="$$1"; \
if [ -n   "$$2" ]; then \
shift; \
args="$$*"; \
fi; \
if [ -d   "$(BINDIR)" ]; then \
PATH="$(BINDIR):$${PATH}"; export PATH; \
elif [ -d   "bin" ]; then \
PATH="`pwd`/bin:$${PATH}"; export PATH; \
fi; \
case "$(MAKEFLAGS)" in \
''|'-'*)	szMakeflags="$(MAKEFLAGS)";; \
*)		szMakeflags="-$(MAKEFLAGS)";; \
esac; \
if [ "$${szMakeflags}" = "-w" ]; then \
szMakeflags="--no-print-directory"; \
else \
szMakeflags=""; \
fi; \
if [ ! -r   "$(opsys)/makefile" ]; then \
echo "Making bootstrap makefile"; \
plobimake -CPP "$(CPP)"   -I "$(CONFDIR)/$(opsys)"   -o "$(opsys)/makefile"   "makefile.in"; \
fi; \
for dir in $${dirs} ; do \
if [ ! -r   "$${dir}/$(opsys)/makefile" ]; then \
echo "Making bootstrap makefile in $${dir}"; \
plobimake -CPP "$(CPP)"   -I "$(CONFDIR)/$(opsys)"   -o "$${dir}/$(opsys)/makefile"   "$${dir}/makefile.in"; \
fi; \
( \
echo "cd `pwd`/$${dir}"; \
cd "$${dir}"; \
$(MAKE_EXE) $${szMakeflags}  $(MAKE_F) "$(opsys)/makefile" $${args} ; \
); \
s="$$?"; \
if [ "$${s}" -ne   0 ]; then \
status="$$s"; \
fi; \
done; \
return $${status} ; \
}; fnCallMake
LNCMD=fnCallLn() { \
set +e; \
for file in $${*} ; do \
target="`basename $${file}`"; \
if [ ! -r   "$${target}" ]; then \
cmd="ln -s $${file} $${target}"; \
echo "$${cmd}"; $${cmd} ; \
fi \
done; \
return 0; \
}; fnCallLn
RMCMD=fnCallRm() { \
set +e; \
if [ -r   "$$2" ]; then \
echo ""; \
echo "$$1"; \
echo -n   "Answer 'yes' if this is ok. "; \
read answer; \
if [ "$${answer}" != "yes" ]; then \
echo ""; \
echo "Canceled $@"; \
exit 255; \
fi; \
fi; \
shift; \
echo "rm $$*"; \
rm $${*} ; \
return 0; \
}; fnCallRm
GZIP=gzip
GZIPCMD=fnCallGZip() { \
set +e; \
status="0"; \
trap "mv $<.$$$$ $<" 1 2 15; \
cmd="cp $< $<.$$$$"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; status="$$?"; \
if [ "$${status}" -eq   0 ]; then \
cmd="$(GZIP) $(GZIPFLAGS) -f $<"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; status="$$?"; \
if [ "$${status}" -eq   0 ]; then \
cmd="mv $<.$$$$ $<; touch $@"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; \
else \
cmd="rm -f $@ $<.$$$$"; \
echo "$${cmd}"; sh -c "$${cmd}"  ; \
fi; \
fi; \
return $${status} ; \
}; fnCallGZip
ASSERTTOPLEVEL= \
PWD="`pwd`"; \
if [ ! -d   "src/include/allegro5" ]; then \
echo "*** "'`'"make $@' can be called only" 1>&2; \
echo "*** in the top-level directory of PLOB!" 1>&2; \
exit 1; \
fi; \
PATH="$${PWD}/bin:$${PATH}"; export PATH
config shipout :: 
	@$(ASSERTTOPLEVEL); \
plobconfig -$@
standard-config : 
	@$(ASSERTTOPLEVEL); \
plobconfig -config   -standard
advanced-config : 
	@$(ASSERTTOPLEVEL); \
plobconfig -config   -advanced
ADDBINDIR=if [ -d   "bin" ]; then \
	    BINPATH="`pwd`/bin"; \
	  elif [ -d   "../bin" ]; then \
	    BINPATH="`(cd ../bin;pwd)`"; \
	  elif [ -d   "../../bin" ]; then \
	    BINPATH="`(cd ../../bin;pwd)`"; \
	  fi; \
	  PATH="$${BINPATH}:$${PATH}"; export PATH
$(CONFDIR)/$(opsys)/make.server : $(RULES)        $(CONFDIR)/make.server.in $(CONFDIR)/$(opsys)/make.vars.in
	@$(ADDBINDIR); \
echo "plobimake -CPP \"$(CPP)\" -I $(CONFDIR)/$(opsys) -o $@ $(CONFDIR)/make.server.in"; \
$${BINPATH}/plobimake -CPP "$(CPP)" -I "$(CONFDIR)/$(opsys)" -o $@      "$(CONFDIR)/make.server.in"
server : $(CONFDIR)/$(opsys)/make.server
	@$(MAKE_EXE) $(MAKE_F) "$(CONFDIR)/$(opsys)/make.server"
tex-log-directory : log
bin log $(CONFDIR)/$(opsys) $(opsys) $(opsys)/pic : 
	@if [ ! -d   "$@" ]; then \
echo "mkdir $@"; \
mkdir  $@   ; \
fi
default-all :: 
default-clean :: 
		-rm -f   *~ core a.out gmon.out *.log log/*
default-dist-clean :: clean
		-rm -f     *.a       *.o *.so     *.fsl *.fasl *.wfasl
default-initial :: $(opsys)
default-shipoutconf :: $(opsys)
$(RULES) : 
$(CONFDIR)/make.server.in : 
GETMAKEVARSCMD=fnCallGetMakeVars() { \
echo 'Looking for old configuration file, please wait ...'; \
szOldConfFile="`ls -1t $$1/../../*/conf/$(opsys)/make.vars.in 2>/dev/null|head -1`"; \
if [ -r   "$${szOldConfFile}" ]; then \
szOldConfDir="`dirname $${szOldConfFile}`"; \
szOldConfFile="`(cd $${szOldConfDir}; pwd)`/`basename $${szOldConfFile}`"; \
echo "Using old configuration file $${szOldConfFile}"; \
cp -p   "$${szOldConfFile}" "$$2"; \
fi; \
if [ ! -r   "$$2" ]; then \
cp -p   "$$1/make.vars.def" "$$2"; \
fi; \
}; fnCallGetMakeVars
$(CONFDIR)/$(opsys)/make.vars.in : 
	@if [ -d   "$(CONFDIR)" ]; then \
$(GETMAKEVARSCMD) $(CONFDIR)  $@   ; \
elif [ -r   "conf/make.vars.def" -a   ! -r   "conf/make.vars.in" ]; then \
$(GETMAKEVARSCMD) conf $(CONFDIR)/$(opsys)/make.vars.in; \
fi
makefile default-makefiles :: makefile.in $(RULES)         $(CONFDIR)/$(opsys)/make.vars.in
	@$(ADDBINDIR); \
echo "plobimake -CPP '$(CPP)' -I $(CONFDIR)/$(opsys) -o $(opsys)/makefile makefile.in"; \
$${BINPATH}/plobimake -CPP "$(CPP)" -I "$(CONFDIR)/$(opsys)" -o "$(opsys)/makefile" "makefile.in"
ALLOPSYS=irix linux solaris win32
echo-allopsys : 
	@echo '>>aa>>' $(ALLOPSYS) '<<zz<<'
MKMAKEFILE=fnMkMakefile() { \
set +e; \
echo ''; \
echo "Making makefiles for $${1}"; \
if [ ! -r   "$(CONFDIR)/$${1}/make.vars.in" ]; then \
if [ -r   "$(CONFDIR)/$${1}/make.vars.def" ]; then \
cp -p   "$(CONFDIR)/$$1/make.vars.def" "$(CONFDIR)/$${1}/make.vars.in"; \
elif [ -r   "$(CONFDIR)/make.vars.def" ]; then \
cp -p   "$(CONFDIR)/make.vars.def" "$(CONFDIR)/$${1}/make.vars.in"; \
fi; \
fi; \
if [ ! -r   "$${1}/makefile" ]; then \
echo "Making bootstrap makefile for $${1}"; \
plobimake -CPP "$(CPP)"   -I "$(CONFDIR)/$${1}" -o "$${1}/makefile" "makefile.in"; \
fi; \
$(MAKE_EXE) $(MAKE_F) "$${1}/makefile" makefiles; \
}
all-makefiles : 
	@$(ADDBINDIR); \
$(MKMAKEFILE); \
for o in $(ALLOPSYS); do \
fnMkMakefile $${o} ; \
done
CFLAGS=$(COPTDEB) $(COPTOPT)
OBJECTS=$(opsys)/lplobroot.o $(opsys)/lplobadmin.o $(opsys)/lplob.o $(opsys)/lplobmisc.o $(opsys)/lplobff.o $(opsys)/lplobsequ.o $(opsys)/lplobstruct.o $(opsys)/lplobclos.o $(opsys)/lplobtype.o $(opsys)/lplobnumber.o $(opsys)/lploblock.o $(opsys)/lplobheap.o $(opsys)/lplobbtree.o
STDINCLUDE= $(SRCIDIR)/c2c.h $(SRCIDIR)/global.h $(SRCIDIR)/hash.h $(SRCIDIR)/generic.h lplob.h ../include/plobconst.h ../include/plobintern.h
LIBPOSTORE=libpostore.a
lplobrootDeps=$(SRCIDIR)/plobversion.h
PICDIR=$(opsys)/pic
LIBLOCCLIENTPLOBLIB=libloclientplob.a
LIBRARY=$(LIBDIR)/$(LIBLOCCLIENTPLOBLIB)
SHAREDOBJECTS=$(PICDIR)/lplobroot.o $(PICDIR)/lplobadmin.o $(PICDIR)/lplob.o $(PICDIR)/lplobmisc.o $(PICDIR)/lplobff.o $(PICDIR)/lplobsequ.o $(PICDIR)/lplobstruct.o $(PICDIR)/lplobclos.o $(PICDIR)/lplobtype.o $(PICDIR)/lplobnumber.o $(PICDIR)/lploblock.o $(PICDIR)/lplobheap.o $(PICDIR)/lplobbtree.o
LIBLOCLIENTPLOBDLL=libloclientplob.so
SHAREDLIBRARY=$(LIBDIR)/$(LIBLOCLIENTPLOBDLL)
COMMONOBJECTS=../common/$(PICDIR)/global.o ../common/$(PICDIR)/trmalloc.o ../common/$(PICDIR)/hash.o ../common/$(PICDIR)/generic.o ../common/$(PICDIR)/plobroot.o ../common/$(PICDIR)/plobadmin.o ../common/$(PICDIR)/plob.o ../common/$(PICDIR)/plobmisc.o ../common/$(PICDIR)/plobff.o ../common/$(PICDIR)/plobsequ.o ../common/$(PICDIR)/plobstruct.o ../common/$(PICDIR)/plobclos.o ../common/$(PICDIR)/plobtype.o ../common/$(PICDIR)/plobnumber.o ../common/$(PICDIR)/ploblock.o ../common/$(PICDIR)/plobheap.o ../common/$(PICDIR)/plobbtree.o
LCOMMONOBJECTS=../lcommon/$(PICDIR)/lcplobroot.o ../lcommon/$(PICDIR)/lcplobadmin.o ../lcommon/$(PICDIR)/lcplob.o ../lcommon/$(PICDIR)/lcplobmisc.o ../lcommon/$(PICDIR)/lcplobff.o ../lcommon/$(PICDIR)/lcplobsequ.o ../lcommon/$(PICDIR)/lcplobstruct.o ../lcommon/$(PICDIR)/lcplobclos.o ../lcommon/$(PICDIR)/lcplobtype.o ../lcommon/$(PICDIR)/lcplobnumber.o ../lcommon/$(PICDIR)/lcploblock.o ../lcommon/$(PICDIR)/lcplobheap.o ../lcommon/$(PICDIR)/lcplobbtree.o
SERVEROBJECTS=../server/$(PICDIR)/splobroot.o ../server/$(PICDIR)/splobadmin.o ../server/$(PICDIR)/splob.o ../server/$(PICDIR)/splobmisc.o ../server/$(PICDIR)/splobff.o ../server/$(PICDIR)/splobsequ.o ../server/$(PICDIR)/splobstruct.o ../server/$(PICDIR)/splobclos.o ../server/$(PICDIR)/splobtype.o ../server/$(PICDIR)/splobnumber.o ../server/$(PICDIR)/sploblock.o ../server/$(PICDIR)/splobheap.o ../server/$(PICDIR)/splobbtree.o
SHAREDLIBFILES= $(SHAREDOBJECTS) $(COMMONOBJECTS) $(LCOMMONOBJECTS) $(SERVEROBJECTS) $(LIBDIR)/$(LIBPOSTORE)
all :: $(opsys) $(PICDIR) objects $(SHAREDLIBRARY) $(LIBRARY)
dll : $(SHAREDLIBRARY)
objects : $(SHAREDOBJECTS)
$(opsys)/lplobroot.o : lplobroot.c lplobroot.h $(SRCIDIR)/plobroot.h $(lplobrootDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobroot.c
$(opsys)/lplobadmin.o : lplobadmin.c lplobadmin.h $(SRCIDIR)/plobadmin.h $(lplobadminDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobadmin.c
$(opsys)/lplob.o : lplob.c lplob.h $(SRCIDIR)/plob.h $(lplobDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplob.c
$(opsys)/lplobmisc.o : lplobmisc.c lplobmisc.h $(SRCIDIR)/plobmisc.h $(lplobmiscDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobmisc.c
$(opsys)/lplobff.o : lplobff.c lplobff.h $(SRCIDIR)/plobff.h $(lplobffDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobff.c
$(opsys)/lplobsequ.o : lplobsequ.c lplobsequ.h $(SRCIDIR)/plobsequ.h $(lplobsequDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobsequ.c
$(opsys)/lplobstruct.o : lplobstruct.c lplobstruct.h $(SRCIDIR)/plobstruct.h $(lplobstructDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobstruct.c
$(opsys)/lplobclos.o : lplobclos.c lplobclos.h $(SRCIDIR)/plobclos.h $(lplobclosDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobclos.c
$(opsys)/lplobtype.o : lplobtype.c lplobtype.h $(SRCIDIR)/plobtype.h $(lplobtypeDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobtype.c
$(opsys)/lplobnumber.o : lplobnumber.c lplobnumber.h $(SRCIDIR)/plobnumber.h $(lplobnumberDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobnumber.c
$(opsys)/lploblock.o : lploblock.c lploblock.h $(SRCIDIR)/ploblock.h $(lploblockDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lploblock.c
$(opsys)/lplobheap.o : lplobheap.c lplobheap.h $(SRCIDIR)/plobheap.h $(lplobheapDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobheap.c
$(opsys)/lplobbtree.o : lplobbtree.c lplobbtree.h $(SRCIDIR)/plobbtree.h $(lplobbtreeDeps) $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ) lplobbtree.c
$(opsys)/libloclientplob.res : libloclientplob.rc ../server/mop-inside.ico $(SRCIDIR)/plobversion.h
	rc -r   -fo $@ -I$(SRCIDIR) -I$(MSVCPATH)/mfc/include -I$(MSVCPATH)/include libloclientplob.rc
$(LIBRARY) : $(SHAREDOBJECTS)
	$(AR) $(ARFLAGS) $(OUTPUT_OPTION_LIB) $(SHAREDOBJECTS)
	$(RANLIB)  $@
$(opsys)/pic/lplobroot.o : lplobroot.c lplobroot.h $(SRCIDIR)/plobroot.h $(lplobrootDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobroot.c
$(opsys)/pic/lplobadmin.o : lplobadmin.c lplobadmin.h $(SRCIDIR)/plobadmin.h $(lplobadminDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobadmin.c
$(opsys)/pic/lplob.o : lplob.c lplob.h $(SRCIDIR)/plob.h $(lplobDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplob.c
$(opsys)/pic/lplobmisc.o : lplobmisc.c lplobmisc.h $(SRCIDIR)/plobmisc.h $(lplobmiscDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobmisc.c
$(opsys)/pic/lplobff.o : lplobff.c lplobff.h $(SRCIDIR)/plobff.h $(lplobffDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobff.c
$(opsys)/pic/lplobsequ.o : lplobsequ.c lplobsequ.h $(SRCIDIR)/plobsequ.h $(lplobsequDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobsequ.c
$(opsys)/pic/lplobstruct.o : lplobstruct.c lplobstruct.h $(SRCIDIR)/plobstruct.h $(lplobstructDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobstruct.c
$(opsys)/pic/lplobclos.o : lplobclos.c lplobclos.h $(SRCIDIR)/plobclos.h $(lplobclosDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobclos.c
$(opsys)/pic/lplobtype.o : lplobtype.c lplobtype.h $(SRCIDIR)/plobtype.h $(lplobtypeDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobtype.c
$(opsys)/pic/lplobnumber.o : lplobnumber.c lplobnumber.h $(SRCIDIR)/plobnumber.h $(lplobnumberDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobnumber.c
$(opsys)/pic/lploblock.o : lploblock.c lploblock.h $(SRCIDIR)/ploblock.h $(lploblockDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lploblock.c
$(opsys)/pic/lplobheap.o : lplobheap.c lplobheap.h $(SRCIDIR)/plobheap.h $(lplobheapDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobheap.c
$(opsys)/pic/lplobbtree.o : lplobbtree.c lplobbtree.h $(SRCIDIR)/plobbtree.h $(lplobbtreeDeps) $(STDINCLUDE)
	$(COMPILEc) $(COPTPIC) $(OUTPUT_OPTION_OBJ) lplobbtree.c
$(SHAREDLIBRARY) : $(SHAREDLIBFILES) 
	$(LINKc) $(OUTPUT_OPTION_DLL)       $(SHAREDLIBFILES)       $(LDLIBS)
test :: $(opsys)/lplobtest
$(opsys)/lplobtest.o : ../client/cplobtest.c ../include/plobheap.h ../include/plobbtree.h $(STDINCLUDE)
	$(COMPILEc) $(OUTPUT_OPTION_OBJ)        -DNORPC=1          -I. -I../server ../client/cplobtest.c
$(opsys)/lplobtest : $(opsys)/lplobtest.o $(LIBDIR)/$(LIBLOCLIENTPLOBLIB) $(LIBDIR)/$(LIBPLOB)
	$(LINKc) $(OUTPUT_OPTION_EXE)     $(opsys)/lplobtest.o -L$(LIBDIR)   	       -lplob   -llplob        $(LDLIBS)
initial :: $(opsys) $(PICDIR)
$(STDTARGETS) :: 
	@$(MAKE) default-$@
