/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PLOBD_H_RPCGEN
#define	_PLOBD_H_RPCGEN

#include <rpc/rpc.h>

/* ------------------------------------------------------------------------
| plobd.x generated by c2rpc on Wed Aug 25 05:05:43  1999
| c2rpc (C) 1996/09/19 Heiko Kirschke kirschke@informatik.uni-hamburg.de
 ----------------------------------------------------------------------- */

#if 1
#include <rpc/rpc.h>
typedef CLIENT * PCLIENT;
#include <global.h>
#endif
#if RPC_CLNT || RPC_SVC
#include <string.h>
#endif
#ifndef as_is
#define as_is void
#endif
#ifndef ABS
#define ABS(x) (((x)<0)?-(x):(x))
#endif
#ifndef MIN
#define MIN(x,y) (((x)<(y))?(x):(y))
#endif
#ifndef MAX
#define MAX(x,y) (((x)>(y))?(x):(y))
#endif
#ifndef PASTE
#define PASTE(token1,token2) token1##token2
#endif
#ifndef PASTE2
#define PASTE2(token1,token2) PASTE(token1,token2)
#endif
#ifndef EMPTY
#define EMPTY
#endif
#ifndef _SVCSUFFIX
#if LINUX
#define _SVCSUFFIX _svc
#else
#define _SVCSUFFIX EMPTY
#endif
#endif
#if !defined(DLLEXPORT)
#if WIN32
#if (BUILDDLL+0)
#define DLLEXPORT __attribute__(( dllexport )) __attribute__((__cdecl__))
#else
#define DLLEXPORT __attribute__(( dllimport )) __attribute__((__cdecl__))
#endif
#else
#define DLLEXPORT
#endif
#endif
#if !defined(DLLEXPORTVAR)
#if WIN32
#if (BUILDDLL+0)
#define DLLEXPORTVAR __attribute__(( dllexport ))
#else
#define DLLEXPORTVAR __attribute__(( dllimport ))
#endif
#else
#define DLLEXPORTVAR
#endif
#endif


#if ! defined(AlignBitsToWords)
#define AlignBitsToWords( nSizeInBits ) (int ) ( ( (nSizeInBits) + nSizeOfPostoreWord * nBitsPerByte -1 ) / ( nSizeOfPostoreWord * nBitsPerByte ) )
#endif



extern DLLEXPORTVAR int __bInitializePlob__ ;
extern DLLEXPORTVAR int __bDeinitializePlob__ ;
void fnServerInitializePlob ( int argc,char * argv [] );
#if ! defined(INITIALIZEPLOB)
void fnInitializePlob ( void );
#define INITIALIZEPLOB ((__bInitializePlob__)? (fnInitializePlob(),TRUE):FALSE)
#endif

#if (RPC_SVC+0)

extern DLLEXPORTVAR int nGlobalStored;
extern DLLEXPORTVAR OBJID oGlobalSession;

#if !defined(UNSTORESESSION)
#define UNSTORESESSION() (__bJmpBufErrorValid__=FALSE,nGlobalStored=0,oGlobalSession=NULLOBJID)
#endif
#if !defined(UnstoreSession)
#define UnstoreSession() ((--nGlobalStored==0)?(UNSTORESESSION(),TRUE):FALSE)
#endif

extern DLLEXPORTVAR LPCSTR __lpszErrorMessage__;
extern DLLEXPORTVAR ERRLVL __nErrorLevel__;


#define RPC_SERVER_INITIALIZE(argc,argv) fnServerInitializePlob(argc,argv)


#define RPC_SERVER_ENTRY() { UNSTORESESSION (); __nErrorLevel__ = errLvl0; if ( __lpszErrorMessage__ != NULL ) { free ( (LPVOID) __lpszErrorMessage__ ); __lpszErrorMessage__ = (LPCSTR) NULL; } INITIALIZEPLOB;}
#define RPC_SERVER_ERRLVL() ((__bDeinitializePlob__)?0:__nErrorLevel__)
#define RPC_SERVER_ERRMSG() ((__bDeinitializePlob__)?(LPCSTR) NULL:__lpszErrorMessage__)

#include <rpc/rpc.h>
#include <rpc/svc.h>

void fnInitializeAfterRegister ( void );
static void fnSvcRun ( void )
{
 INITIALIZEPLOB;
 fnInitializeAfterRegister ();
 svc_run();
}

#ifdef svc_run
#undef svc_run
#endif
#define svc_run fnSvcRun

#endif

#if (RPC_CLNT+0)

#define RPC_CLIENT_INITIALIZE() INITIALIZEPLOB

extern PCLIENT fnClientCreate ( LPCSTR pszHost,
 LPCSTR pszTransport );
#define RPC_CLIENT_CREATE(host,transport) fnClientCreate ( host,transport )

extern PCLIENT fnClientDestroy ( PCLIENT pClient );
#define RPC_CLIENT_DESTROY(pclient) fnClientDestroy ( pclient )

#define RPC_CLIENT_ERROR(msg) ((__bDeinitializePlob__)? FALSE: (fnLISPerrorCallback(errLvlError,NULL,msg),TRUE))
#define RPC_CLIENT_CERROR(cont,msg) ((__bDeinitializePlob__)? FALSE: (fnLISPerrorCallback(errLvlCError,cont,msg),TRUE))
#define RPC_CLIENT_SERROR(lvl,proc,msg) ((__bDeinitializePlob__)? FALSE: (fnLISPserrorCallback(lvl,proc,msg),TRUE))

#endif

#if (RPC_SVC+0)||(RPC_CLNT+0)

#define xdr_fnServerObjectReadValues_rets xdr_fnPatchedServerObjectReadValues_rets
#define xdr_fnServerObjectWriteValues_args xdr_fnPatchedServerObjectWriteValues_args
#define xdr_fnServerObjectPeekValues_rets xdr_fnPatchedServerObjectPeekValues_rets
#define xdr_fnServerObjectPoke_args xdr_fnPatchedServerObjectPoke_args
#include "plobpxdr.h"

#endif


#ifndef RPCNOTYPES

#define	eshRootTag 136
#define	eshUserTag 256
#define	eshMachTag 272
#define	NULLOBJID 0
#define	NULLTYPETAG -1
#define	nBitsPerByte 8
#define	nBitsPerBigit 16
#define	nSizeOfPostoreWord 4
#define	nFixnumBits 30
#define	nTagBits 3
#define	nTagMask 0
#define	MAX_URL 256
#define	eshConsTag 8
#define	eshVectorTag 64
#define	eshIVectorTag 192
#define	eshArrayTag 32
#define	eshStringTag 40
#define	eshBitVectorTag 48
#define	eshStructureTag 56
#define	eshInstanceTag 72
#define	eshSingleFloatValueSize 1
#define	eshDoubleFloatValueSize 2
#define	eshSumLockTag 168
#define	eshOneLockTag 176
#define	eshQueueEntryTag 208
#define	NULLTRACTID 0
#define	eshHeapTag 144
#define	eshBTreeTag 152
#define	eshBTreePageTag 160
#define	eshBTreeMapperTag 216
#define	eshGetTestMode -2

enum GETVERSION {
	esvDatabase = 1,
	esvServerCode = 2,
	esvClientCcode = 3,
	esvClientLispCode = 4
};
typedef enum GETVERSION GETVERSION;

enum MACHLOGINP {
	eshLoginIgnore = 0,
	eshLoginAllow = 1,
	eshLoginDeny = 2,
	eshLoginGet = 3
};
typedef enum MACHLOGINP MACHLOGINP;

enum LISPROOTIDX {
	eshLispRootIdxVersion = 1,
	eshLispRootIdxLispFormat = 2,
	eshLispRootIdxTimeFormat = 3,
	eshLispRootIdxNamePkgTable = 4,
	eshLispRootIdxSymbolClassTable = 5,
	eshLispRootIdxStructDescr = 6,
	eshLispRootIdxStructSlotDescr = 7,
	eshLispRootIdxPkgDescr = 8,
	eshLispRootIdxPlobDescr = 9,
	eshLispRootIdxClassDescr = 10,
	eshLispRootIdxSlotDescr = 11,
	eshLispRootIdxDirSlotDescr = 12,
	eshLispRootIdxEffSlotDescr = 13,
	eshLispRootIdxMethodDescr = 14,
	eshLispRootIdxPFS = 15,
	eshLispRootSize = 16
};
typedef enum LISPROOTIDX LISPROOTIDX;

enum SHSYMBOLIDX {
	eshSymbolIdxFunction = 0,
	eshSymbolIdxPackage = 1,
	eshSymbolIdxPList = 2,
	eshSymbolIdxName = 3,
	eshSymbolIdxValue = 4,
	eshSymbolObjIdSize = 5
};
typedef enum SHSYMBOLIDX SHSYMBOLIDX;

enum SHFUNCTIONIDX {
	eshFunctionIdxName = 0,
	eshFunctionIdxLanguage = 1,
	eshFunctionIdxCode = 2,
	eshFunctionSize = 3
};
typedef enum SHFUNCTIONIDX SHFUNCTIONIDX;

enum SHTLATTERIDX {
	eshTLatterIdxKey = 0,
	eshTLatterIdxData = 1,
	eshTLatterIdxNext = 2,
	eshTLatterObjIdSize = 3
};
typedef enum SHTLATTERIDX SHTLATTERIDX;

enum SHTYPETAG {
	eshObjIdTag = 0,
	eshFixnumTag = 1,
	eshShortFloatTag = 2,
	eshCharacterTag = 3,
	eshMarkerTag = 4,
	eshUnboundTag = 260,
	eshSlotUnboundTag = 516,
	eshUnstorableTag = 772,
	eshEndTag = 1028,
	eshMinTag = 1284,
	eshMaxTag = 1540,
	eshTrueTag = 1796,
	eshIgnoreSlotTag = 2052,
	eshNilTag = 2308,
	eshAllowTag = 2564,
	eshDenyTag = 2820,
	eshEqTag = 3076,
	eshEqlTag = 3332,
	eshEqualTag = 3588,
	eshBitmaskTag = 6,
	eshBuiltInTag = 7,
	eshSymbolTag = 16,
	eshFunctionTag = 24,
	eshSingleFloatTag = 80,
	eshDoubleFloatTag = 88,
	eshBignumTag = 96,
	eshRatioTag = 104,
	eshComplexTag = 112,
	eshTLatterTag = 184,
	eshShortObjIdTag = 120,
	eshDynCStringPtrTag = 128,
	eshDynCFloatPtrTag = 200,
	eshDynCDoublePtrTag = 224,
	eshDynCQuadruplePtrTag = 232
};
typedef enum SHTYPETAG SHTYPETAG;

enum ERRLVL {
	errLvl0 = 0,
	errLvlInfo = 1,
	errLvlWarn = 2,
	errLvlCError = 3,
	errLvlError = 4,
	errLvlFatal = 5
};
typedef enum ERRLVL ERRLVL;

enum GETACTION {
	eGetPortPassive = 1,
	eGetPortActive = 2,
	eCreateDatabase = 4,
	eStartServer = 8
};
typedef enum GETACTION GETACTION;

enum SHLOCK {
	eshKeyNotFound = -10,
	eshLockErrorFirst = -9,
	eshLockErrorLast = -1,
	eshLockDenied = -9,
	eshUnknownLockMode = -8,
	eshGeneralError = -7,
	eshUnlockFailed = -6,
	eshWriteFailed = -5,
	eshLockFailed = -4,
	eshLockConflictFirst = -3,
	eshLockConflictLast = -1,
	eshLockConflictElement = -3,
	eshLockConflictVector = -2,
	eshLockConflictStore = -1,
	eshLockModeReadOnlyIntent = 32,
	eshLockModeReadIntent = 64,
	eshLockModeWriteIntent = 128,
	eshLockLevelNothing = 0,
	eshLockLevelMin = 1,
	eshLockLevelMax = 3,
	eshLockLevelElement = 1,
	eshLockLevelVector = 2,
	eshLockLevelStore = 3,
	eshLockModeNothing = 0,
	eshLockModeReadOnly = 4,
	eshLockModeRead = 8,
	eshLockModeWrite = 16,
	eshUnlock = 256,
	eshLockForce = 512,
	eshLockPeek = 1024,
	eshLockElementRead = 9,
	eshLockVectorRead = 10,
	eshLockStoreRead = 11,
	eshLockElementWrite = 17,
	eshLockVectorWrite = 18,
	eshLockStoreWrite = 19,
	eshLockLevelMask = 3,
	eshLockModeMask = 28,
	eshLockModeExcl = 16
};
typedef enum SHLOCK SHLOCK;

enum DAYLIGHTSAVINGTIME {
	eDstNone = 0,
	eDstUsa = 1,
	eDstAust = 2,
	eDstWet = 3,
	eDstMet = 4,
	eDstEet = 5,
	eDstCan = 6,
	eDstGb = 7,
	eDstRum = 8,
	eDstTur = 9,
	eDstAustAlt = 10
};
typedef enum DAYLIGHTSAVINGTIME DAYLIGHTSAVINGTIME;

enum DEPENDENTMODE {
	flagDependentGet = -1,
	flagDependentNone = 0,
	flagDependentRead = 4,
	flagDependentWrite = 8,
	flagDependentReadWrite = 12
};
typedef enum DEPENDENTMODE DEPENDENTMODE;

enum NUMERICSTDSTREAM {
	eshStdIn = 0,
	eshStdOut = 1,
	eshStdErr = 2
};
typedef enum NUMERICSTDSTREAM NUMERICSTDSTREAM;

enum FLUSHMODE {
	flushGet = -1,
	flushNever = 0,
	flushSeldom = 1,
	flushSometimes = 2,
	flushOften = 3,
	flushAlways = 4,
	flushDefault = 0
};
typedef enum FLUSHMODE FLUSHMODE;

enum FLAGMODE {
	flagGet = -1,
	flagSet = 0
};
typedef enum FLAGMODE FLAGMODE;

enum SHCONSIDX {
	eshConsIdxCar = 0,
	eshConsIdxCdr = 1,
	eshConsObjIdSize = 2
};
typedef enum SHCONSIDX SHCONSIDX;

enum SHVECTORIDX {
	eshVectorObjIdSize = 0
};
typedef enum SHVECTORIDX SHVECTORIDX;

enum IVECTORTAG {
	eshSignedByte2Tag = 5892,
	eshSignedByte4Tag = 9988,
	eshSignedByte8Tag = 14084,
	eshSignedByte16Tag = 18180,
	eshSignedByte32Tag = 22276,
	eshUnsignedByte1Tag = 46852,
	eshUnsignedByte2Tag = 26372,
	eshUnsignedByte4Tag = 30468,
	eshUnsignedByte8Tag = 34564,
	eshUnsignedByte16Tag = 38660,
	eshUnsignedByte32Tag = 42756
};
typedef enum IVECTORTAG IVECTORTAG;

enum IVECTORIDX {
	eshIVectorIdxType = 0,
	eshIVectorIdxLength = 1,
	eshIVectorObjIdSize = 2
};
typedef enum IVECTORIDX IVECTORIDX;

enum SHARRAYIDX {
	eshArrayIdxDataVector = 0,
	eshArrayIdxFillPointer = 1,
	eshArrayIdxDisplacedOffset = 2,
	eshArrayIdxAdjustable = 3,
	eshArrayIdxRank = 4,
	eshArrayIdxFirstDimension = 5,
	eshArrayObjIdSize = 5
};
typedef enum SHARRAYIDX SHARRAYIDX;

enum SHSTRINGIDX {
	eshStringIdxLength = 0,
	eshStringObjIdSize = 1
};
typedef enum SHSTRINGIDX SHSTRINGIDX;

enum SHBITVECTORIDX {
	eshBitVectorIdxLength = 0,
	eshBitVectorObjIdSize = 1
};
typedef enum SHBITVECTORIDX SHBITVECTORIDX;

enum SHSTRUCTIDX {
	eshStructIdxDesc = 0,
	eshStructObjIdSize = 0
};
typedef enum SHSTRUCTIDX SHSTRUCTIDX;

enum SHSTRUCTDESCIDX {
	eshStructDescrIdxName = 1,
	eshStructDescrIdxVersion = 2,
	eshStructDescrIdxTimeStamp = 3,
	eshStructDescrIdxSchemaEvolution = 4,
	eshStructDescrIdxNextGen = 5,
	eshStructDescrIdxConstructor = 6,
	eshStructDescrIdxDependent = 7,
	eshStructDescrIdxPNSlots = 8,
	eshStructDescrIdxNSlots = 9,
	eshStructDescrIdxSlots = 10,
	eshStructDescSize = 11
};
typedef enum SHSTRUCTDESCIDX SHSTRUCTDESCIDX;

enum SHSTRUCTSLOTDESCIDX {
	eshStructSlotDescrIdxName = 1,
	eshStructSlotDescrInitArg = 2,
	eshStructSlotDescrIdxReader = 3,
	eshStructSlotDescrIdxLocation = 4,
	eshStructSlotDescrIdxInit = 5,
	eshStructSlotDescrIdxType = 6,
	eshStructSlotDescrIdxExtent = 7,
	eshStructSlotDescrIdxDeferred = 8,
	eshStructSlotDescSize = 9
};
typedef enum SHSTRUCTSLOTDESCIDX SHSTRUCTSLOTDESCIDX;

enum SHPACKAGEIDX {
	eshPackageIdxName = 1,
	eshPackageIdxInternals = 2,
	eshPackageIdxExternals = 3,
	eshPackageSize = 4
};
typedef enum SHPACKAGEIDX SHPACKAGEIDX;

enum SHINSTIDX {
	eshInstIdxClassWrapper = 0,
	eshInstIdxDataVector = 1,
	eshInstObjIdSize = 2
};
typedef enum SHINSTIDX SHINSTIDX;

enum SHPLOBDESCRIDX {
	eshPlobDescrSize = 0
};
typedef enum SHPLOBDESCRIDX SHPLOBDESCRIDX;

enum SHCLASSDESCRIDX {
	eshClassDescrIdxName = 0,
	eshClassDescrIdxSuperclasses = 1,
	eshClassDescrIdxPrecedenceList = 2,
	eshClassDescrIdxMetaclass = 3,
	eshClassDescrIdxVersion = 4,
	eshClassDescrIdxTimeStamp = 5,
	eshClassDescrIdxSchemaEvolution = 6,
	eshClassDescrIdxNextGen = 7,
	eshClassDescrIdxDirMethods = 8,
	eshClassDescrIdxPNSlots = 9,
	eshClassDescrIdxNSlots = 10,
	eshClassDescrIdxDirSlots = 11,
	eshClassDescrIdxEffSlots = 12,
	eshClassDescrIdxConstructor = 13,
	eshClassDescrIdxDependent = 14,
	eshClassDescrIdxPList = 15,
	eshClassDescrIdxPrototype = 16,
	eshClassDescrSize = 17
};
typedef enum SHCLASSDESCRIDX SHCLASSDESCRIDX;

enum SHCLASSLOTIDX {
	eshClassSlotDescrIdxName = 0,
	eshClassSlotDescrIdxInitArg = 1,
	eshClassSlotDescrIdxInitForm = 2,
	eshClassSlotDescrIdxInitFunc = 3,
	eshClassSlotDescrIdxType = 4,
	eshClassSlotDescrIdxAlloc = 5,
	eshClassSlotDescrIdxExtent = 6,
	eshClassSlotDescrIdxDeferred = 7,
	eshClassSlotDescrIdxIndex = 8,
	eshClassSlotDescrSize = 9
};
typedef enum SHCLASSLOTIDX SHCLASSLOTIDX;

enum SHDIRCLASSLOTIDX {
	eshClassDirSlotDescrIdxReaders = 9,
	eshClassDirSlotDescrIdxWriters = 10,
	eshClassDirSlotDescrSize = 11
};
typedef enum SHDIRCLASSLOTIDX SHDIRCLASSLOTIDX;

enum SHEFFCLASSLOTIDX {
	eshClassEffSlotDescrIdxLocation = 9,
	eshClassEffSlotDescrSize = 10
};
typedef enum SHEFFCLASSLOTIDX SHEFFCLASSLOTIDX;

enum SHMETHODIDX {
	eshMethodIdxName = 0,
	eshMethodIdxFunction = 1,
	eshMethodIdxLambdaList = 2,
	eshMethodIdxSpecializers = 3,
	eshMethodIdxQualifiers = 4,
	eshMethodSize = 5
};
typedef enum SHMETHODIDX SHMETHODIDX;

enum COMPARETAG {
	eshEqual = 4,
	eshEql = 0,
	eshEq = 3,
	eshNotEqual = 9,
	eshNotEql = 5,
	eshNotEq = 8,
	eshLessEqual = -2,
	eshLess = -1,
	eshGreater = 1,
	eshGreaterEqual = 2
};
typedef enum COMPARETAG COMPARETAG;

enum TYPEFLAGS {
	typeNoFlags = 0,
	typeImmediateP = 1,
	typeNotAllocatableP = 2,
	typeTransientP = 4,
	typeVarSizeObjIdP = 8,
	typeVarSizeValueP = 16,
	typeRecycleP = 32,
	typeNotYetImplemented = 64,
	typeNotCachableP = 128
};
typedef enum TYPEFLAGS TYPEFLAGS;

enum SHRATIOIDX {
	eshRatioIdxNumerator = 0,
	eshRatioIdxDenominator = 1,
	eshRatioObjIdSize = 2
};
typedef enum SHRATIOIDX SHRATIOIDX;

enum SHCOMPLEXIDX {
	eshComplexIdxRealPart = 0,
	eshComplexIdxImagPart = 1,
	eshComplexObjIdSize = 2
};
typedef enum SHCOMPLEXIDX SHCOMPLEXIDX;

enum SHBIGNUMIDX {
	eshBignumIdxFormat = 0,
	eshBignumIdxSize = 1,
	eshBignumObjIdSize = 2
};
typedef enum SHBIGNUMIDX SHBIGNUMIDX;

enum READONLYMODE {
	eshReadOnlyP = -1,
	eshReadWrite = 0,
	eshReadOnly = 1
};
typedef enum READONLYMODE READONLYMODE;

enum SHHEAPIDX {
	eshHeapIdxSelf = 0,
	eshHeapIdxTractId = 1,
	eshHeapIdxTractLogId = 2
};
typedef enum SHHEAPIDX SHHEAPIDX;

enum BTREERESULT {
	btreeNotFound = 0,
	btreeFound = 1,
	btreeInserted = 2,
	btreeUpdated = 3,
	btreeDeleted = 4
};
typedef enum BTREERESULT BTREERESULT;

enum SHBTREEIDX {
	eshBTreeIdxSelf = 0,
	eshBTreeIdxCompare = 1,
	eshBTreeIdxCount = 2,
	eshBTreeIdxCached = 3,
	eshBTreeIdxTimeStamp = 4
};
typedef enum SHBTREEIDX SHBTREEIDX;

enum SEEK {
	seekSet = 0,
	seekCur = 1,
	seekEnd = 2
};
typedef enum SEEK SEEK;

typedef int psint;

typedef int SHORTOBJID;

typedef psint OBJID;

typedef int TRACTID;

#endif	/* ! RPCNOTYPES */


typedef struct {
	u_int as_is_vector_t_len;
	char *as_is_vector_t_val;
} as_is_vector_t;

typedef struct {
	u_int void_vector_t_len;
	char *void_vector_t_val;
} void_vector_t;

typedef struct {
	u_int int_vector_t_len;
	int *int_vector_t_val;
} int_vector_t;

typedef struct {
	u_int u_int_vector_t_len;
	u_int *u_int_vector_t_val;
} u_int_vector_t;

typedef struct {
	u_int float_vector_t_len;
	float *float_vector_t_val;
} float_vector_t;

typedef struct {
	u_int double_vector_t_len;
	double *double_vector_t_val;
} double_vector_t;

typedef char *string_t;

struct fnClientDbReadRoot_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbReadRoot_rets fnClientDbReadRoot_rets;

struct fnServerDbWriteRoot_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbWriteRoot_rets fnServerDbWriteRoot_rets;

struct fnServerDbWriteRoot_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerDbWriteRoot_args fnServerDbWriteRoot_args;

struct fnClientDbSessions_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbSessions_rets fnClientDbSessions_rets;

struct fnServerGetVersion_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerGetVersion_rets fnServerGetVersion_rets;

struct fnServerGetVersion_args {
	SHORTOBJID oShortObjIdHeap;
	GETVERSION eWhat;
};
typedef struct fnServerGetVersion_args fnServerGetVersion_args;

struct fnClientDbCreateMachine_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbCreateMachine_rets fnClientDbCreateMachine_rets;

struct fnClientDbCreateMachine_args {
	SHORTOBJID oShortObjIdHeap;
	int_vector_t nAddr;
	MACHLOGINP eLoginP;
};
typedef struct fnClientDbCreateMachine_args fnClientDbCreateMachine_args;

struct fnClientMachineLoginP_rets {
	MACHLOGINP ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientMachineLoginP_rets fnClientMachineLoginP_rets;

struct fnClientMachineLoginP_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortMachine;
	MACHLOGINP eLoginP;
};
typedef struct fnClientMachineLoginP_args fnClientMachineLoginP_args;

struct fnClientMachineAddr_rets {
	bool_t ReturnValue;
	int_vector_t pnAddr;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientMachineAddr_rets fnClientMachineAddr_rets;

struct fnClientMachineAddr_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortMachine;
	int pnAddrSize;
};
typedef struct fnClientMachineAddr_args fnClientMachineAddr_args;

struct fnClientDbMachineSearch_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbMachineSearch_rets fnClientDbMachineSearch_rets;

struct fnClientDbMachineSearch_args {
	SHORTOBJID oShortObjIdHeap;
	int_vector_t nAddr;
};
typedef struct fnClientDbMachineSearch_args fnClientDbMachineSearch_args;

struct fnClientDbMachineDelete_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbMachineDelete_rets fnClientDbMachineDelete_rets;

struct fnClientDbMachineDelete_args {
	SHORTOBJID oShortObjIdHeap;
	int_vector_t nAddr;
};
typedef struct fnClientDbMachineDelete_args fnClientDbMachineDelete_args;

struct fnClientDbMachineInsert_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbMachineInsert_rets fnClientDbMachineInsert_rets;

struct fnClientDbMachineInsert_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortMachine;
};
typedef struct fnClientDbMachineInsert_args fnClientDbMachineInsert_args;

struct fnClientDbMachines_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbMachines_rets fnClientDbMachines_rets;

struct fnServerGetPortByDirectory_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerGetPortByDirectory_rets fnServerGetPortByDirectory_rets;

struct fnServerGetPortByDirectory_args {
	string_t szDirectory;
	GETACTION eAction;
};
typedef struct fnServerGetPortByDirectory_args fnServerGetPortByDirectory_args;

struct fnServerGetPID_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerGetPID_rets fnServerGetPID_rets;

struct fnServerGetDirectory_rets {
	int ReturnValue;
	string_t szDirectory;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerGetDirectory_rets fnServerGetDirectory_rets;

struct fnServerGetDirectory_args {
	int nDirectory;
	int szDirectorySize;
};
typedef struct fnServerGetDirectory_args fnServerGetDirectory_args;

struct fnServerExit_rets {
	bool_t ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerExit_rets fnServerExit_rets;

struct fnServerExit_args {
	SHORTOBJID oShortObjIdHeap;
	bool_t bForceExit;
};
typedef struct fnServerExit_args fnServerExit_args;

struct fnServerDbReset_rets {
	bool_t ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbReset_rets fnServerDbReset_rets;

struct fnServerDbReset_args {
	SHORTOBJID oShortObjIdHeap;
	bool_t bForceReset;
};
typedef struct fnServerDbReset_args fnServerDbReset_args;

struct fnServerRestart_rets {
	bool_t ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerRestart_rets fnServerRestart_rets;

struct fnServerRestart_args {
	SHORTOBJID oShortObjIdHeap;
	bool_t bForceRestart;
};
typedef struct fnServerRestart_args fnServerRestart_args;

struct fnClientObjectCanModify_rets {
	bool_t ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientObjectCanModify_rets fnClientObjectCanModify_rets;

struct fnClientObjectCanModify_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnClientObjectCanModify_args fnClientObjectCanModify_args;

struct fnServerDbClose_args {
	SHORTOBJID oShortObjIdHeap;
	bool_t bWithGarbageCollection;
};
typedef struct fnServerDbClose_args fnServerDbClose_args;

struct fnClientDbConfiguration_rets {
	bool_t ReturnValue;
	int pnFlags;
	int pnMinimumKey;
	int pnMaximumKey;
	int pnKeyAlignment;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbConfiguration_rets fnClientDbConfiguration_rets;

struct fnServerDbCreateObject_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbCreateObject_rets fnServerDbCreateObject_rets;

struct fnServerDbCreateObject_args {
	SHORTOBJID oShortObjIdHeap;
	SHTYPETAG nTypeTag;
	int nExtraReferences;
	SHTYPETAG eTypeTagValues;
	int nExtraValues;
};
typedef struct fnServerDbCreateObject_args fnServerDbCreateObject_args;

struct fnServerDbCreateObjects_rets {
	int ReturnValue;
	u_int_vector_t pObjIds;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbCreateObjects_rets fnServerDbCreateObjects_rets;

struct fnServerDbCreateObjects_args {
	SHORTOBJID oShortObjIdHeap;
	SHTYPETAG nTypeTag;
	int nExtraReferences;
	SHTYPETAG eTypeTagValues;
	int nExtraValues;
	int nObjIds;
	int pObjIdsSize;
};
typedef struct fnServerDbCreateObjects_args fnServerDbCreateObjects_args;

struct fnServerObjectDestroy_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerObjectDestroy_args fnServerObjectDestroy_args;

struct fnServerObjectObjIdSize_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectObjIdSize_rets fnServerObjectObjIdSize_rets;

struct fnServerObjectObjIdSize_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerObjectObjIdSize_args fnServerObjectObjIdSize_args;

struct fnServerDbOpen_rets {
	SHORTOBJID ReturnValue;
	OBJID poObjIdMin;
	OBJID poObjIdMax;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbOpen_rets fnServerDbOpen_rets;

struct fnServerDbOpen_args {
	string_t szDirectory;
	string_t szUserName;
	string_t szDescription;
	int nMinAddrInK;
};
typedef struct fnServerDbOpen_args fnServerDbOpen_args;

struct fnServerObjectFlush_rets {
	bool_t ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectFlush_rets fnServerObjectFlush_rets;

struct fnServerObjectFlush_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerObjectFlush_args fnServerObjectFlush_args;

struct fnServerObjectReadAtIndex_rets {
	SHLOCK ReturnValue;
	int pnValue;
	SHTYPETAG pnTypeTag;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadAtIndex_rets fnServerObjectReadAtIndex_rets;

struct fnServerObjectReadAtIndex_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
};
typedef struct fnServerObjectReadAtIndex_args fnServerObjectReadAtIndex_args;

struct fnServerObjectReadAtIndices_rets {
	int ReturnValue;
	int_vector_t pObjIds;
	u_int_vector_t pnTypeTags;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadAtIndices_rets fnServerObjectReadAtIndices_rets;

struct fnServerObjectReadAtIndices_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
	int nObjIds;
	int pObjIdsSize;
	int pnTypeTagsSize;
};
typedef struct fnServerObjectReadAtIndices_args fnServerObjectReadAtIndices_args;

struct fnServerObjectReadObjId_rets {
	SHLOCK ReturnValue;
	int pnObjId;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadObjId_rets fnServerObjectReadObjId_rets;

struct fnServerObjectReadObjId_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
};
typedef struct fnServerObjectReadObjId_args fnServerObjectReadObjId_args;

struct fnServerObjectReadValues_rets {
	int ReturnValue;
	SHTYPETAG pnElementTypeTagOut;
	int pnSizeInElementsOut;
	void_vector_t pBuffer;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadValues_rets fnServerObjectReadValues_rets;

struct fnServerObjectReadValues_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
	SHTYPETAG nElementTypeTagIn;
	int nSizeInElementsIn;
	int pBufferSize;
};
typedef struct fnServerObjectReadValues_args fnServerObjectReadValues_args;

struct fnClientDbStatistics_rets {
	bool_t ReturnValue;
	int pnMaximumSpace;
	int pnAllocatedSpace;
	int pnUnallocatedSpace;
	int pnUnusedAllocatedSpace;
	int pnAllocatedManagementSpace;
	int pnNumberOfObjects;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientDbStatistics_rets fnClientDbStatistics_rets;

struct fnServerObjectTypeTag_rets {
	SHTYPETAG ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectTypeTag_rets fnServerObjectTypeTag_rets;

struct fnServerObjectTypeTag_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerObjectTypeTag_args fnServerObjectTypeTag_args;

struct fnServerObjectValueSize_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectValueSize_rets fnServerObjectValueSize_rets;

struct fnServerObjectValueSize_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerObjectValueSize_args fnServerObjectValueSize_args;

struct fnServerObjectWriteAtIndex_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteAtIndex_rets fnServerObjectWriteAtIndex_rets;

struct fnServerObjectWriteAtIndex_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
	int nValue;
	SHTYPETAG nTypeTagValue;
};
typedef struct fnServerObjectWriteAtIndex_args fnServerObjectWriteAtIndex_args;

struct fnServerObjectWriteAtIndices_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteAtIndices_rets fnServerObjectWriteAtIndices_rets;

struct fnServerObjectWriteAtIndices_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
	int nObjIds;
	int_vector_t pObjIds;
	u_int_vector_t pnTypeTags;
};
typedef struct fnServerObjectWriteAtIndices_args fnServerObjectWriteAtIndices_args;

struct fnServerObjectWriteObjId_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteObjId_rets fnServerObjectWriteObjId_rets;

struct fnServerObjectWriteObjId_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
	SHORTOBJID oShortObjIdWrite;
};
typedef struct fnServerObjectWriteObjId_args fnServerObjectWriteObjId_args;

struct fnServerObjectWriteValues_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteValues_rets fnServerObjectWriteValues_rets;

struct fnServerObjectWriteValues_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
	SHTYPETAG nElementTypeTag;
	int nSizeInElements;
	void_vector_t pBuffer;
};
typedef struct fnServerObjectWriteValues_args fnServerObjectWriteValues_args;

struct fnShortMakeDependent_rets {
	DEPENDENTMODE ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnShortMakeDependent_rets fnShortMakeDependent_rets;

struct fnShortMakeDependent_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortSelf;
	DEPENDENTMODE nDependentMode;
};
typedef struct fnShortMakeDependent_args fnShortMakeDependent_args;

struct fnServerObjectPeekSlots_rets {
	SHLOCK ReturnValue;
	u_int_vector_t pBuffer;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectPeekSlots_rets fnServerObjectPeekSlots_rets;

struct fnServerObjectPeekSlots_args {
	SHORTOBJID oShortObjIdHeap;
	int hPeek;
	int nWords;
	int pBufferSize;
};
typedef struct fnServerObjectPeekSlots_args fnServerObjectPeekSlots_args;

struct fnServerObjectPeekValues_rets {
	SHLOCK ReturnValue;
	u_int_vector_t pnElementTypeTagsOut;
	u_int_vector_t pnSizesInElementsOut;
	void_vector_t pBuffer;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectPeekValues_rets fnServerObjectPeekValues_rets;

struct fnServerObjectPeekValues_args {
	SHORTOBJID oShortObjIdHeap;
	int hPeek;
	int nObjects;
	u_int_vector_t pnElementTypeTagsIn;
	u_int_vector_t pnSizesInElementsIn;
	int pnElementTypeTagsOutSize;
	int pnSizesInElementsOutSize;
	int pBufferSize;
};
typedef struct fnServerObjectPeekValues_args fnServerObjectPeekValues_args;

struct fnServerObjectPoke_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	int nSlots;
	u_int_vector_t pSlots;
	SHTYPETAG nElementTypeTag;
	int nSizeInElements;
	void_vector_t pValues;
};
typedef struct fnServerObjectPoke_args fnServerObjectPoke_args;

struct fnFlushMode_rets {
	FLUSHMODE ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnFlushMode_rets fnFlushMode_rets;

struct fnFlushMode_args {
	SHORTOBJID oShortObjIdHeap;
	FLUSHMODE nMode;
};
typedef struct fnFlushMode_args fnFlushMode_args;

struct fnFlagWord_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnFlagWord_rets fnFlagWord_rets;

struct fnFlagWord_args {
	FLAGMODE nGetOrSet;
	int nFlagWord;
};
typedef struct fnFlagWord_args fnFlagWord_args;

struct fnShortMakeIVector_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnShortMakeIVector_rets fnShortMakeIVector_rets;

struct fnShortMakeIVector_args {
	SHORTOBJID oShortObjIdHeap;
	SHTYPETAG nTypeTag;
	int nElements;
};
typedef struct fnShortMakeIVector_args fnShortMakeIVector_args;

struct fnShortMakeString_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnShortMakeString_rets fnShortMakeString_rets;

struct fnShortMakeString_args {
	SHORTOBJID oShortObjIdHeap;
	string_t lpszFrom;
};
typedef struct fnShortMakeString_args fnShortMakeString_args;

struct fnServerDbCreateStructures_rets {
	int ReturnValue;
	u_int_vector_t pObjIds;
	u_int pnSlots;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbCreateStructures_rets fnServerDbCreateStructures_rets;

struct fnServerDbCreateStructures_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdStructDescr;
	int nObjIds;
	int pObjIdsSize;
};
typedef struct fnServerDbCreateStructures_args fnServerDbCreateStructures_args;

struct fnServerDbCreateInstances_rets {
	int ReturnValue;
	u_int_vector_t pObjIds;
	u_int pnSlots;
	u_int_vector_t pDatas;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbCreateInstances_rets fnServerDbCreateInstances_rets;

struct fnServerDbCreateInstances_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdClassDescr;
	int nObjIds;
	int pObjIdsSize;
	int pDatasSize;
};
typedef struct fnServerDbCreateInstances_args fnServerDbCreateInstances_args;

struct fnServerInstanceWriteWrapper_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerInstanceWriteWrapper_rets fnServerInstanceWriteWrapper_rets;

struct fnServerInstanceWriteWrapper_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdInstance;
	SHORTOBJID oShortObjIdClassDescr;
};
typedef struct fnServerInstanceWriteWrapper_args fnServerInstanceWriteWrapper_args;

struct fnServerInstanceWriteData_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerInstanceWriteData_rets fnServerInstanceWriteData_rets;

struct fnServerInstanceWriteData_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdInstance;
	SHORTOBJID oShortObjIdData;
};
typedef struct fnServerInstanceWriteData_args fnServerInstanceWriteData_args;

struct fnServerDbTypeTagName_rets {
	string_t ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbTypeTagName_rets fnServerDbTypeTagName_rets;

struct fnServerObjectPrettyPrint_rets {
	int ReturnValue;
	string_t lpszBuffer;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectPrettyPrint_rets fnServerObjectPrettyPrint_rets;

struct fnServerObjectPrettyPrint_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHTYPETAG nTypeTag;
	int nBuffer;
	int lpszBufferSize;
};
typedef struct fnServerObjectPrettyPrint_args fnServerObjectPrettyPrint_args;

struct fnShortPrintSymbol_rets {
	int ReturnValue;
	string_t lpszBuffer;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnShortPrintSymbol_rets fnShortPrintSymbol_rets;

struct fnShortPrintSymbol_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortSymbol;
	int nBuffer;
	int lpszBufferSize;
};
typedef struct fnShortPrintSymbol_args fnShortPrintSymbol_args;

struct fnShortMakeSingleFloat_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnShortMakeSingleFloat_rets fnShortMakeSingleFloat_rets;

struct fnShortMakeSingleFloat_args {
	SHORTOBJID oShortObjIdHeap;
	float fFrom;
};
typedef struct fnShortMakeSingleFloat_args fnShortMakeSingleFloat_args;

struct fnShortMakeDoubleFloat_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnShortMakeDoubleFloat_rets fnShortMakeDoubleFloat_rets;

struct fnShortMakeDoubleFloat_args {
	SHORTOBJID oShortObjIdHeap;
	double fFrom;
};
typedef struct fnShortMakeDoubleFloat_args fnShortMakeDoubleFloat_args;

struct fnServerDbMakeBignum_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbMakeBignum_rets fnServerDbMakeBignum_rets;

struct fnServerDbMakeBignum_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdFormat;
	int nSizeInBits;
	as_is_vector_t pnBignum;
};
typedef struct fnServerDbMakeBignum_args fnServerDbMakeBignum_args;

struct fnServerObjectReadBignum_rets {
	SHLOCK ReturnValue;
	as_is_vector_t pnBignum;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadBignum_rets fnServerObjectReadBignum_rets;

struct fnServerObjectReadBignum_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdFormat;
	SHORTOBJID oShortObjId;
	int nSizeInBits;
	int pnBignumSize;
};
typedef struct fnServerObjectReadBignum_args fnServerObjectReadBignum_args;

struct fnServerObjectReadDoubleFloat_rets {
	SHLOCK ReturnValue;
	double pfDoubleFloat;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadDoubleFloat_rets fnServerObjectReadDoubleFloat_rets;

struct fnServerObjectReadDoubleFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerObjectReadDoubleFloat_args fnServerObjectReadDoubleFloat_args;

struct fnServerObjectReadFixnum_rets {
	SHLOCK ReturnValue;
	int pnFixnum;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadFixnum_rets fnServerObjectReadFixnum_rets;

struct fnServerObjectReadFixnum_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
};
typedef struct fnServerObjectReadFixnum_args fnServerObjectReadFixnum_args;

struct fnServerObjectReadSingleFloat_rets {
	SHLOCK ReturnValue;
	float pfSingleFloat;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectReadSingleFloat_rets fnServerObjectReadSingleFloat_rets;

struct fnServerObjectReadSingleFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
};
typedef struct fnServerObjectReadSingleFloat_args fnServerObjectReadSingleFloat_args;

struct fnServerObjectWriteBignum_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteBignum_rets fnServerObjectWriteBignum_rets;

struct fnServerObjectWriteBignum_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdFormat;
	SHORTOBJID oShortObjId;
	int nSizeInBits;
	as_is_vector_t pnBignum;
};
typedef struct fnServerObjectWriteBignum_args fnServerObjectWriteBignum_args;

struct fnServerObjectWriteDoubleFloat_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteDoubleFloat_rets fnServerObjectWriteDoubleFloat_rets;

struct fnServerObjectWriteDoubleFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	double fDoubleFloat;
};
typedef struct fnServerObjectWriteDoubleFloat_args fnServerObjectWriteDoubleFloat_args;

struct fnServerObjectWriteFixnum_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteFixnum_rets fnServerObjectWriteFixnum_rets;

struct fnServerObjectWriteFixnum_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	SHORTOBJID oExpectingClass;
	SHTYPETAG nExpectingTypeTag;
	int nIndex;
	int nFixnumWrite;
};
typedef struct fnServerObjectWriteFixnum_args fnServerObjectWriteFixnum_args;

struct fnServerObjectWriteSingleFloat_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerObjectWriteSingleFloat_rets fnServerObjectWriteSingleFloat_rets;

struct fnServerObjectWriteSingleFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjId;
	float fSingleFloat;
};
typedef struct fnServerObjectWriteSingleFloat_args fnServerObjectWriteSingleFloat_args;

struct fnClientLockPrint_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientLockPrint_rets fnClientLockPrint_rets;

struct fnClientLockPrint_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortSelf;
	SHLOCK nLevel;
	NUMERICSTDSTREAM nStdStream;
};
typedef struct fnClientLockPrint_args fnClientLockPrint_args;

struct fnClientTransactionLockGet_rets {
	SHLOCK ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientTransactionLockGet_rets fnClientTransactionLockGet_rets;

struct fnClientTransactionLockGet_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdLockedByP;
	SHLOCK nLevelP;
	SHORTOBJID oShortLockedP;
	SHTYPETAG nTypeTagLockedP;
	int nIndexP;
};
typedef struct fnClientTransactionLockGet_args fnClientTransactionLockGet_args;

struct fnServerTransactionLockInsert_rets {
	SHLOCK ReturnValue;
	int phPeek;
	int pnObjIdWords;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionLockInsert_rets fnServerTransactionLockInsert_rets;

struct fnServerTransactionLockInsert_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdLockBy;
	SHLOCK nLock;
	SHORTOBJID oShortToLock;
	SHTYPETAG nTypeTagToLock;
	int nIndex;
};
typedef struct fnServerTransactionLockInsert_args fnServerTransactionLockInsert_args;

struct fnServerTransactionLockSet_rets {
	SHLOCK ReturnValue;
	int phPeek;
	int pnObjIdWords;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionLockSet_rets fnServerTransactionLockSet_rets;

struct fnServerTransactionLockSet_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdLockBy;
	SHLOCK nLock;
	SHORTOBJID oShortToLock;
	SHTYPETAG nTypeTagToLock;
	int nIndex;
};
typedef struct fnServerTransactionLockSet_args fnServerTransactionLockSet_args;

struct fnServerTransactionUnlock_rets {
	SHLOCK ReturnValue;
	SHLOCK pnVectorLockNow;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionUnlock_rets fnServerTransactionUnlock_rets;

struct fnServerTransactionUnlock_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdLockedBy;
	SHLOCK nLock;
	SHORTOBJID oShortToUnlock;
	int nIndex;
};
typedef struct fnServerTransactionUnlock_args fnServerTransactionUnlock_args;

struct fnServerTransactionUnlockAll_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionUnlockAll_rets fnServerTransactionUnlockAll_rets;

struct fnServerTransactionUnlockAll_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdLockedBy;
	SHORTOBJID oShortToUnlock;
};
typedef struct fnServerTransactionUnlockAll_args fnServerTransactionUnlockAll_args;

struct fnServerTransactionUnlockAllAll_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionUnlockAllAll_rets fnServerTransactionUnlockAllAll_rets;

struct fnServerTransactionUnlockAllAll_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdLockedBy;
};
typedef struct fnServerTransactionUnlockAllAll_args fnServerTransactionUnlockAllAll_args;

struct fnShortMakeReadOnly_rets {
	bool_t ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnShortMakeReadOnly_rets fnShortMakeReadOnly_rets;

struct fnShortMakeReadOnly_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortSelf;
	READONLYMODE nReadOnlyP;
};
typedef struct fnShortMakeReadOnly_args fnShortMakeReadOnly_args;

struct fnServerTransactionBegin_rets {
	TRACTID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionBegin_rets fnServerTransactionBegin_rets;

struct fnServerTransactionBegin_args {
	SHORTOBJID oShortObjIdHeap;
	bool_t bIgnoreError;
};
typedef struct fnServerTransactionBegin_args fnServerTransactionBegin_args;

struct fnServerTransactionCancel_rets {
	TRACTID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionCancel_rets fnServerTransactionCancel_rets;

struct fnServerTransactionCancel_args {
	SHORTOBJID oShortObjIdHeap;
	bool_t bIgnoreError;
};
typedef struct fnServerTransactionCancel_args fnServerTransactionCancel_args;

struct fnServerTransactionEnd_rets {
	TRACTID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerTransactionEnd_rets fnServerTransactionEnd_rets;

struct fnServerTransactionEnd_args {
	SHORTOBJID oShortObjIdHeap;
	bool_t bIgnoreError;
};
typedef struct fnServerTransactionEnd_args fnServerTransactionEnd_args;

struct fnServerDbTransactionP_rets {
	TRACTID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerDbTransactionP_rets fnServerDbTransactionP_rets;

struct fnServerDbTransactionP_args {
	SHORTOBJID oShortObjIdHeap;
	TRACTID nTractId;
};
typedef struct fnServerDbTransactionP_args fnServerDbTransactionP_args;

struct fnClientBtreeClear_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreeClear_rets fnClientBtreeClear_rets;

struct fnClientBtreeClear_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
};
typedef struct fnClientBtreeClear_args fnClientBtreeClear_args;

struct fnClientBtreeCount_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreeCount_rets fnClientBtreeCount_rets;

struct fnClientBtreeCount_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
};
typedef struct fnClientBtreeCount_args fnClientBtreeCount_args;

struct fnServerBtreeDelete_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeDelete_rets fnServerBtreeDelete_rets;

struct fnServerBtreeDelete_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	int nValueKey;
	SHTYPETAG nTypeTagKey;
};
typedef struct fnServerBtreeDelete_args fnServerBtreeDelete_args;

struct fnServerBtreeDeleteByFloat_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeDeleteByFloat_rets fnServerBtreeDeleteByFloat_rets;

struct fnServerBtreeDeleteByFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	float fKey;
};
typedef struct fnServerBtreeDeleteByFloat_args fnServerBtreeDeleteByFloat_args;

struct fnServerBtreeDeleteByDouble_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeDeleteByDouble_rets fnServerBtreeDeleteByDouble_rets;

struct fnServerBtreeDeleteByDouble_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	double fKey;
};
typedef struct fnServerBtreeDeleteByDouble_args fnServerBtreeDeleteByDouble_args;

struct fnServerBtreeDeleteByString_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeDeleteByString_rets fnServerBtreeDeleteByString_rets;

struct fnServerBtreeDeleteByString_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	string_t szKey;
};
typedef struct fnServerBtreeDeleteByString_args fnServerBtreeDeleteByString_args;

struct fnServerBtreeInsert_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeInsert_rets fnServerBtreeInsert_rets;

struct fnServerBtreeInsert_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	int nValueKey;
	SHTYPETAG nTypeTagKey;
	int nValueData;
	SHTYPETAG nTypeTagData;
};
typedef struct fnServerBtreeInsert_args fnServerBtreeInsert_args;

struct fnServerBtreeInsertByFloat_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeInsertByFloat_rets fnServerBtreeInsertByFloat_rets;

struct fnServerBtreeInsertByFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	float fKey;
	int nValueData;
	SHTYPETAG nTypeTagData;
};
typedef struct fnServerBtreeInsertByFloat_args fnServerBtreeInsertByFloat_args;

struct fnServerBtreeInsertByDouble_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeInsertByDouble_rets fnServerBtreeInsertByDouble_rets;

struct fnServerBtreeInsertByDouble_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	double fKey;
	int nValueData;
	SHTYPETAG nTypeTagData;
};
typedef struct fnServerBtreeInsertByDouble_args fnServerBtreeInsertByDouble_args;

struct fnServerBtreeInsertByString_rets {
	BTREERESULT ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeInsertByString_rets fnServerBtreeInsertByString_rets;

struct fnServerBtreeInsertByString_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	string_t szKey;
	int nValueData;
	SHTYPETAG nTypeTagData;
};
typedef struct fnServerBtreeInsertByString_args fnServerBtreeInsertByString_args;

struct fnServerBtreemapSearch_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapSearch_rets fnServerBtreemapSearch_rets;

struct fnServerBtreemapSearch_args {
	SHORTOBJID oShortObjIdMapper;
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	int nValueKeyLower;
	SHTYPETAG nTypeTagKeyLower;
	COMPARETAG eCompareLower;
	int nValueKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
};
typedef struct fnServerBtreemapSearch_args fnServerBtreemapSearch_args;

struct fnServerBtreemapSearchByFloat_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapSearchByFloat_rets fnServerBtreemapSearchByFloat_rets;

struct fnServerBtreemapSearchByFloat_args {
	SHORTOBJID oShortObjIdMapper;
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	float fKeyLower;
	SHTYPETAG nTypeTagKeyLower;
	COMPARETAG eCompareLower;
	float fKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
};
typedef struct fnServerBtreemapSearchByFloat_args fnServerBtreemapSearchByFloat_args;

struct fnServerBtreemapSearchByDouble_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapSearchByDouble_rets fnServerBtreemapSearchByDouble_rets;

struct fnServerBtreemapSearchByDouble_args {
	SHORTOBJID oShortObjIdMapper;
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	double fKeyLower;
	COMPARETAG eCompareLower;
	SHTYPETAG nTypeTagKeyLower;
	double fKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
};
typedef struct fnServerBtreemapSearchByDouble_args fnServerBtreemapSearchByDouble_args;

struct fnServerBtreemapSearchByString_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapSearchByString_rets fnServerBtreemapSearchByString_rets;

struct fnServerBtreemapSearchByString_args {
	SHORTOBJID oShortObjIdMapper;
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	string_t szKeyLower;
	SHTYPETAG nTypeTagKeyLower;
	COMPARETAG eCompareLower;
	string_t szKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
};
typedef struct fnServerBtreemapSearchByString_args fnServerBtreemapSearchByString_args;

struct fnServerBtreemapSeek_rets {
	int ReturnValue;
	int pnValueKey;
	SHTYPETAG pnTypeTagKey;
	int pnValueData;
	SHTYPETAG pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapSeek_rets fnServerBtreemapSeek_rets;

struct fnServerBtreemapSeek_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdMapper;
	int nIncrement;
	SEEK eOrigin;
};
typedef struct fnServerBtreemapSeek_args fnServerBtreemapSeek_args;

struct fnServerBtreemapSeekSet_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapSeekSet_rets fnServerBtreemapSeekSet_rets;

struct fnServerBtreemapSeekSet_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdMapper;
	int nIncrement;
	SEEK eOrigin;
	int nValueData;
	SHTYPETAG nTypeTagData;
};
typedef struct fnServerBtreemapSeekSet_args fnServerBtreemapSeekSet_args;

struct fnServerBtreemapFirst_rets {
	int ReturnValue;
	SHORTOBJID lpoShortObjIdMapper;
	int_vector_t pnValueKey;
	u_int_vector_t pnTypeTagKey;
	int_vector_t pnValueData;
	u_int_vector_t pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapFirst_rets fnServerBtreemapFirst_rets;

struct fnServerBtreemapFirst_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	int nValueKeyLower;
	SHTYPETAG nTypeTagKeyLower;
	COMPARETAG eCompareLower;
	int nValueKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
	int nMap;
	int pnValueKeySize;
	int pnTypeTagKeySize;
	int pnValueDataSize;
	int pnTypeTagDataSize;
};
typedef struct fnServerBtreemapFirst_args fnServerBtreemapFirst_args;

struct fnServerBtreemapFirstByFloat_rets {
	int ReturnValue;
	SHORTOBJID lpoShortObjIdMapper;
	int_vector_t pnValueKey;
	u_int_vector_t pnTypeTagKey;
	int_vector_t pnValueData;
	u_int_vector_t pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapFirstByFloat_rets fnServerBtreemapFirstByFloat_rets;

struct fnServerBtreemapFirstByFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	float fKeyLower;
	SHTYPETAG nTypeTagKeyLower;
	COMPARETAG eCompareLower;
	float fKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
	int nMap;
	int pnValueKeySize;
	int pnTypeTagKeySize;
	int pnValueDataSize;
	int pnTypeTagDataSize;
};
typedef struct fnServerBtreemapFirstByFloat_args fnServerBtreemapFirstByFloat_args;

struct fnServerBtreemapFirstByDouble_rets {
	int ReturnValue;
	SHORTOBJID lpoShortObjIdMapper;
	int_vector_t pnValueKey;
	u_int_vector_t pnTypeTagKey;
	int_vector_t pnValueData;
	u_int_vector_t pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapFirstByDouble_rets fnServerBtreemapFirstByDouble_rets;

struct fnServerBtreemapFirstByDouble_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	double fKeyLower;
	COMPARETAG eCompareLower;
	SHTYPETAG nTypeTagKeyLower;
	double fKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
	int nMap;
	int pnValueKeySize;
	int pnTypeTagKeySize;
	int pnValueDataSize;
	int pnTypeTagDataSize;
};
typedef struct fnServerBtreemapFirstByDouble_args fnServerBtreemapFirstByDouble_args;

struct fnServerBtreemapFirstByString_rets {
	int ReturnValue;
	SHORTOBJID lpoShortObjIdMapper;
	int_vector_t pnValueKey;
	u_int_vector_t pnTypeTagKey;
	int_vector_t pnValueData;
	u_int_vector_t pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreemapFirstByString_rets fnServerBtreemapFirstByString_rets;

struct fnServerBtreemapFirstByString_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	string_t szKeyLower;
	SHTYPETAG nTypeTagKeyLower;
	COMPARETAG eCompareLower;
	string_t szKeyUpper;
	SHTYPETAG nTypeTagKeyUpper;
	COMPARETAG eCompareUpper;
	bool_t bDescending;
	int nMap;
	int pnValueKeySize;
	int pnTypeTagKeySize;
	int pnValueDataSize;
	int pnTypeTagDataSize;
};
typedef struct fnServerBtreemapFirstByString_args fnServerBtreemapFirstByString_args;

struct fnClientBtreemapNext_rets {
	int ReturnValue;
	int_vector_t pnValueKey;
	u_int_vector_t pnTypeTagKey;
	int_vector_t pnValueData;
	u_int_vector_t pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreemapNext_rets fnClientBtreemapNext_rets;

struct fnClientBtreemapNext_args {
	SHORTOBJID oShortObjIdMapper;
	SHORTOBJID oShortObjIdHeap;
	int nMap;
	int pnValueKeySize;
	int pnTypeTagKeySize;
	int pnValueDataSize;
	int pnTypeTagDataSize;
};
typedef struct fnClientBtreemapNext_args fnClientBtreemapNext_args;

struct fnClientBtreemapLast_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreemapLast_rets fnClientBtreemapLast_rets;

struct fnClientBtreemapLast_args {
	SHORTOBJID oShortObjIdMapper;
	SHORTOBJID oShortObjIdHeap;
};
typedef struct fnClientBtreemapLast_args fnClientBtreemapLast_args;

struct fnClientBtreePrint_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreePrint_rets fnClientBtreePrint_rets;

struct fnClientBtreePrint_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	NUMERICSTDSTREAM nStdStream;
};
typedef struct fnClientBtreePrint_args fnClientBtreePrint_args;

struct fnServerBtreeSearch_rets {
	BTREERESULT ReturnValue;
	int pnValueKey;
	SHTYPETAG pnTypeTagKey;
	int pnValueData;
	SHTYPETAG pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeSearch_rets fnServerBtreeSearch_rets;

struct fnServerBtreeSearch_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	int nValueKey;
	SHTYPETAG nTypeTagKey;
};
typedef struct fnServerBtreeSearch_args fnServerBtreeSearch_args;

struct fnServerBtreeSearchByFloat_rets {
	BTREERESULT ReturnValue;
	int pnValueKey;
	SHTYPETAG pnTypeTagKey;
	int pnValueData;
	SHTYPETAG pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeSearchByFloat_rets fnServerBtreeSearchByFloat_rets;

struct fnServerBtreeSearchByFloat_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	float fKey;
	SHTYPETAG nTypeTagKey;
};
typedef struct fnServerBtreeSearchByFloat_args fnServerBtreeSearchByFloat_args;

struct fnServerBtreeSearchByDouble_rets {
	BTREERESULT ReturnValue;
	int pnValueKey;
	SHTYPETAG pnTypeTagKey;
	int pnValueData;
	SHTYPETAG pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeSearchByDouble_rets fnServerBtreeSearchByDouble_rets;

struct fnServerBtreeSearchByDouble_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	double fKey;
	SHTYPETAG nTypeTagKey;
};
typedef struct fnServerBtreeSearchByDouble_args fnServerBtreeSearchByDouble_args;

struct fnServerBtreeSearchByString_rets {
	BTREERESULT ReturnValue;
	int pnValueKey;
	SHTYPETAG pnTypeTagKey;
	int pnValueData;
	SHTYPETAG pnTypeTagData;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnServerBtreeSearchByString_rets fnServerBtreeSearchByString_rets;

struct fnServerBtreeSearchByString_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	string_t szKey;
	SHTYPETAG nTypeTagKey;
};
typedef struct fnServerBtreeSearchByString_args fnServerBtreeSearchByString_args;

struct fnClientBtreeRoot_rets {
	SHORTOBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreeRoot_rets fnClientBtreeRoot_rets;

struct fnClientBtreeRoot_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
};
typedef struct fnClientBtreeRoot_args fnClientBtreeRoot_args;

struct fnClientBtreeSize_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreeSize_rets fnClientBtreeSize_rets;

struct fnClientBtreeSize_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
};
typedef struct fnClientBtreeSize_args fnClientBtreeSize_args;

struct fnClientBtreeTestMode_rets {
	COMPARETAG ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreeTestMode_rets fnClientBtreeTestMode_rets;

struct fnClientBtreeTestMode_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	COMPARETAG nNewTestMode;
};
typedef struct fnClientBtreeTestMode_args fnClientBtreeTestMode_args;

struct fnClientBtreePageSize_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreePageSize_rets fnClientBtreePageSize_rets;

struct fnClientBtreePageSize_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTree;
	int nNewPageSize;
};
typedef struct fnClientBtreePageSize_args fnClientBtreePageSize_args;

struct fnClientBtreepageParent_rets {
	OBJID ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreepageParent_rets fnClientBtreepageParent_rets;

struct fnClientBtreepageParent_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTreePage;
};
typedef struct fnClientBtreepageParent_args fnClientBtreepageParent_args;

struct fnClientBtreepageCount_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreepageCount_rets fnClientBtreepageCount_rets;

struct fnClientBtreepageCount_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTreePage;
};
typedef struct fnClientBtreepageCount_args fnClientBtreepageCount_args;

struct fnClientBtreepageGetSize_rets {
	int ReturnValue;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreepageGetSize_rets fnClientBtreepageGetSize_rets;

struct fnClientBtreepageGetSize_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTreePage;
};
typedef struct fnClientBtreepageGetSize_args fnClientBtreepageGetSize_args;

struct fnClientBtreepageItem_rets {
	int ReturnValue;
	int_vector_t pnValueKey;
	u_int_vector_t pnTypeTagKey;
	int_vector_t pnValueData;
	u_int_vector_t pnTypeTagData;
	u_int_vector_t poNext;
	int nErrorLvl;
	string_t pszErrorMsg;
};
typedef struct fnClientBtreepageItem_rets fnClientBtreepageItem_rets;

struct fnClientBtreepageItem_args {
	SHORTOBJID oShortObjIdHeap;
	SHORTOBJID oShortObjIdBTreePage;
	int nIndex;
	int nItems;
	int pnValueKeySize;
	int pnTypeTagKeySize;
	int pnValueDataSize;
	int pnTypeTagDataSize;
	int poNextSize;
};
typedef struct fnClientBtreepageItem_args fnClientBtreepageItem_args;

typedef long	RPCPORT;
extern RPCPORT DLLEXPORT	fnPlobdGetPortOffset	( void );
extern RPCPORT DLLEXPORT	fnPlobdGetPort	( void );
extern RPCPORT DLLEXPORT	fnPlobdSetPort	( RPCPORT	lPortNew );

typedef u_long	RPCVERSION;
extern RPCVERSION DLLEXPORT	fnPlobdGetVersion	( void );
extern RPCVERSION DLLEXPORT	fnPlobdSetVersion	( RPCVERSION	lVersionNew );

extern struct svc_req *	fnServerPlobdRequest	( void );
extern struct svc_req *	fnServerPlobdReply
	( void (*pfnCalled)(), void * pReturnValue );

extern PCLIENT DLLEXPORT fnClientPlobdCreate
	( LPCSTR pszHost, LPCSTR pszTransport );
extern PCLIENT DLLEXPORT fnClientPlobd	( void );
extern LPCSTR DLLEXPORT fnClientPlobdHost	( void );
extern LPCSTR DLLEXPORT fnClientPlobdTransport	( void );
extern bool_t DLLEXPORT fnClientPlobdFlush	( PCLIENT pClient );
extern PCLIENT DLLEXPORT fnClientPlobdDestroy	( PCLIENT pClient );




/* 1996/09/19 HK kirschke@informatik.uni-hamburg.de		*/
/* Following #define bypasses a declaration error in		*/
/* /usr/include/rpc/xdr.h; the declaration found there is:	*/
/*	extern bool_t xdr_bool(XDR *, bool_t *);		*/
/* but should be:						*/
/*	extern bool_t xdr_bool_t(XDR *, bool_t *);		*/

#define xdr_bool_t xdr_bool



















































































































































































































































































































































/* ------------------------------------------------------------------------
| End of plobd.x
 ----------------------------------------------------------------------- */

#define	PLOBD ((unsigned long)(0x20506E62))
#define	PLOBDVERS ((unsigned long)(1))
#define	fnRpc_fnClientDbReadRoot ((unsigned long)(1))
extern  fnClientDbReadRoot_rets * fnrpc_fnclientdbreadroot_1();
#define	fnRpc_fnServerDbWriteRoot ((unsigned long)(2))
extern  fnServerDbWriteRoot_rets * fnrpc_fnserverdbwriteroot_1();
#define	fnRpc_fnClientDbSessions ((unsigned long)(3))
extern  fnClientDbSessions_rets * fnrpc_fnclientdbsessions_1();
#define	fnRpc_fnServerGetVersion ((unsigned long)(4))
extern  fnServerGetVersion_rets * fnrpc_fnservergetversion_1();
#define	fnRpc_fnClientDbCreateMachine ((unsigned long)(5))
extern  fnClientDbCreateMachine_rets * fnrpc_fnclientdbcreatemachine_1();
#define	fnRpc_fnClientMachineLoginP ((unsigned long)(6))
extern  fnClientMachineLoginP_rets * fnrpc_fnclientmachineloginp_1();
#define	fnRpc_fnClientMachineAddr ((unsigned long)(7))
extern  fnClientMachineAddr_rets * fnrpc_fnclientmachineaddr_1();
#define	fnRpc_fnClientDbMachineSearch ((unsigned long)(8))
extern  fnClientDbMachineSearch_rets * fnrpc_fnclientdbmachinesearch_1();
#define	fnRpc_fnClientDbMachineDelete ((unsigned long)(9))
extern  fnClientDbMachineDelete_rets * fnrpc_fnclientdbmachinedelete_1();
#define	fnRpc_fnClientDbMachineInsert ((unsigned long)(10))
extern  fnClientDbMachineInsert_rets * fnrpc_fnclientdbmachineinsert_1();
#define	fnRpc_fnClientDbMachines ((unsigned long)(11))
extern  fnClientDbMachines_rets * fnrpc_fnclientdbmachines_1();
#define	fnRpc_fnServerGetPortByDirectory ((unsigned long)(12))
extern  fnServerGetPortByDirectory_rets * fnrpc_fnservergetportbydirectory_1();
#define	fnRpc_fnServerGetPID ((unsigned long)(13))
extern  fnServerGetPID_rets * fnrpc_fnservergetpid_1();
#define	fnRpc_fnServerGetDirectory ((unsigned long)(14))
extern  fnServerGetDirectory_rets * fnrpc_fnservergetdirectory_1();
#define	fnRpc_fnServerExit ((unsigned long)(15))
extern  fnServerExit_rets * fnrpc_fnserverexit_1();
#define	fnRpc_fnServerDbReset ((unsigned long)(16))
extern  fnServerDbReset_rets * fnrpc_fnserverdbreset_1();
#define	fnRpc_fnServerRestart ((unsigned long)(17))
extern  fnServerRestart_rets * fnrpc_fnserverrestart_1();
#define	fnRpc_fnClientObjectCanModify ((unsigned long)(18))
extern  fnClientObjectCanModify_rets * fnrpc_fnclientobjectcanmodify_1();
#define	fnRpc_fnServerDbClose_batch ((unsigned long)(19))
extern  void * fnrpc_fnserverdbclose_batch_1();
#define	fnRpc_fnClientDbConfiguration ((unsigned long)(20))
extern  fnClientDbConfiguration_rets * fnrpc_fnclientdbconfiguration_1();
#define	fnRpc_fnServerDbCreateObject ((unsigned long)(21))
extern  fnServerDbCreateObject_rets * fnrpc_fnserverdbcreateobject_1();
#define	fnRpc_fnServerDbCreateObjects ((unsigned long)(22))
extern  fnServerDbCreateObjects_rets * fnrpc_fnserverdbcreateobjects_1();
#define	fnRpc_fnServerObjectDestroy_batch ((unsigned long)(23))
extern  void * fnrpc_fnserverobjectdestroy_batch_1();
#define	fnRpc_fnServerObjectObjIdSize ((unsigned long)(24))
extern  fnServerObjectObjIdSize_rets * fnrpc_fnserverobjectobjidsize_1();
#define	fnRpc_fnServerDbOpen ((unsigned long)(25))
extern  fnServerDbOpen_rets * fnrpc_fnserverdbopen_1();
#define	fnRpc_fnServerObjectFlush ((unsigned long)(26))
extern  fnServerObjectFlush_rets * fnrpc_fnserverobjectflush_1();
#define	fnRpc_fnServerObjectReadAtIndex ((unsigned long)(27))
extern  fnServerObjectReadAtIndex_rets * fnrpc_fnserverobjectreadatindex_1();
#define	fnRpc_fnServerObjectReadAtIndices ((unsigned long)(28))
extern  fnServerObjectReadAtIndices_rets * fnrpc_fnserverobjectreadatindices_1();
#define	fnRpc_fnServerObjectReadObjId ((unsigned long)(29))
extern  fnServerObjectReadObjId_rets * fnrpc_fnserverobjectreadobjid_1();
#define	fnRpc_fnServerObjectReadValues ((unsigned long)(30))
extern  fnServerObjectReadValues_rets * fnrpc_fnserverobjectreadvalues_1();
#define	fnRpc_fnClientDbStatistics ((unsigned long)(31))
extern  fnClientDbStatistics_rets * fnrpc_fnclientdbstatistics_1();
#define	fnRpc_fnServerDbStabilise_batch ((unsigned long)(32))
extern  void * fnrpc_fnserverdbstabilise_batch_1();
#define	fnRpc_fnServerObjectTypeTag ((unsigned long)(33))
extern  fnServerObjectTypeTag_rets * fnrpc_fnserverobjecttypetag_1();
#define	fnRpc_fnServerObjectValueSize ((unsigned long)(34))
extern  fnServerObjectValueSize_rets * fnrpc_fnserverobjectvaluesize_1();
#define	fnRpc_fnServerObjectWriteAtIndex ((unsigned long)(35))
extern  fnServerObjectWriteAtIndex_rets * fnrpc_fnserverobjectwriteatindex_1();
#define	fnRpc_fnServerObjectWriteAtIndices ((unsigned long)(36))
extern  fnServerObjectWriteAtIndices_rets * fnrpc_fnserverobjectwriteatindices_1();
#define	fnRpc_fnServerObjectWriteObjId ((unsigned long)(37))
extern  fnServerObjectWriteObjId_rets * fnrpc_fnserverobjectwriteobjid_1();
#define	fnRpc_fnServerObjectWriteValues ((unsigned long)(38))
extern  fnServerObjectWriteValues_rets * fnrpc_fnserverobjectwritevalues_1();
#define	fnRpc_fnShortMakeDependent ((unsigned long)(39))
extern  fnShortMakeDependent_rets * fnrpc_fnshortmakedependent_1();
#define	fnRpc_fnServerObjectPeekSlots ((unsigned long)(40))
extern  fnServerObjectPeekSlots_rets * fnrpc_fnserverobjectpeekslots_1();
#define	fnRpc_fnServerObjectPeekValues ((unsigned long)(41))
extern  fnServerObjectPeekValues_rets * fnrpc_fnserverobjectpeekvalues_1();
#define	fnRpc_fnServerObjectPoke_batch ((unsigned long)(42))
extern  void * fnrpc_fnserverobjectpoke_batch_1();
#define	fnRpc_fnFlushMode ((unsigned long)(43))
extern  fnFlushMode_rets * fnrpc_fnflushmode_1();
#define	fnRpc_fnFlagWord ((unsigned long)(44))
extern  fnFlagWord_rets * fnrpc_fnflagword_1();
#define	fnRpc_fnShortMakeIVector ((unsigned long)(45))
extern  fnShortMakeIVector_rets * fnrpc_fnshortmakeivector_1();
#define	fnRpc_fnShortMakeString ((unsigned long)(46))
extern  fnShortMakeString_rets * fnrpc_fnshortmakestring_1();
#define	fnRpc_fnServerDbCreateStructures ((unsigned long)(47))
extern  fnServerDbCreateStructures_rets * fnrpc_fnserverdbcreatestructures_1();
#define	fnRpc_fnServerDbCreateInstances ((unsigned long)(48))
extern  fnServerDbCreateInstances_rets * fnrpc_fnserverdbcreateinstances_1();
#define	fnRpc_fnServerInstanceWriteWrapper ((unsigned long)(49))
extern  fnServerInstanceWriteWrapper_rets * fnrpc_fnserverinstancewritewrapper_1();
#define	fnRpc_fnServerInstanceWriteData ((unsigned long)(50))
extern  fnServerInstanceWriteData_rets * fnrpc_fnserverinstancewritedata_1();
#define	fnRpc_fnServerDbTypeTagName ((unsigned long)(51))
extern  fnServerDbTypeTagName_rets * fnrpc_fnserverdbtypetagname_1();
#define	fnRpc_fnServerObjectPrettyPrint ((unsigned long)(52))
extern  fnServerObjectPrettyPrint_rets * fnrpc_fnserverobjectprettyprint_1();
#define	fnRpc_fnShortPrintSymbol ((unsigned long)(53))
extern  fnShortPrintSymbol_rets * fnrpc_fnshortprintsymbol_1();
#define	fnRpc_fnShortMakeSingleFloat ((unsigned long)(54))
extern  fnShortMakeSingleFloat_rets * fnrpc_fnshortmakesinglefloat_1();
#define	fnRpc_fnShortMakeDoubleFloat ((unsigned long)(55))
extern  fnShortMakeDoubleFloat_rets * fnrpc_fnshortmakedoublefloat_1();
#define	fnRpc_fnServerDbMakeBignum ((unsigned long)(56))
extern  fnServerDbMakeBignum_rets * fnrpc_fnserverdbmakebignum_1();
#define	fnRpc_fnServerObjectReadBignum ((unsigned long)(57))
extern  fnServerObjectReadBignum_rets * fnrpc_fnserverobjectreadbignum_1();
#define	fnRpc_fnServerObjectReadDoubleFloat ((unsigned long)(58))
extern  fnServerObjectReadDoubleFloat_rets * fnrpc_fnserverobjectreaddoublefloat_1();
#define	fnRpc_fnServerObjectReadFixnum ((unsigned long)(59))
extern  fnServerObjectReadFixnum_rets * fnrpc_fnserverobjectreadfixnum_1();
#define	fnRpc_fnServerObjectReadSingleFloat ((unsigned long)(60))
extern  fnServerObjectReadSingleFloat_rets * fnrpc_fnserverobjectreadsinglefloat_1();
#define	fnRpc_fnServerObjectWriteBignum ((unsigned long)(61))
extern  fnServerObjectWriteBignum_rets * fnrpc_fnserverobjectwritebignum_1();
#define	fnRpc_fnServerObjectWriteDoubleFloat ((unsigned long)(62))
extern  fnServerObjectWriteDoubleFloat_rets * fnrpc_fnserverobjectwritedoublefloat_1();
#define	fnRpc_fnServerObjectWriteFixnum ((unsigned long)(63))
extern  fnServerObjectWriteFixnum_rets * fnrpc_fnserverobjectwritefixnum_1();
#define	fnRpc_fnServerObjectWriteSingleFloat ((unsigned long)(64))
extern  fnServerObjectWriteSingleFloat_rets * fnrpc_fnserverobjectwritesinglefloat_1();
#define	fnRpc_fnClientLockPrint ((unsigned long)(65))
extern  fnClientLockPrint_rets * fnrpc_fnclientlockprint_1();
#define	fnRpc_fnClientTransactionLockGet ((unsigned long)(66))
extern  fnClientTransactionLockGet_rets * fnrpc_fnclienttransactionlockget_1();
#define	fnRpc_fnServerTransactionLockInsert ((unsigned long)(67))
extern  fnServerTransactionLockInsert_rets * fnrpc_fnservertransactionlockinsert_1();
#define	fnRpc_fnServerTransactionLockSet ((unsigned long)(68))
extern  fnServerTransactionLockSet_rets * fnrpc_fnservertransactionlockset_1();
#define	fnRpc_fnServerTransactionUnlock ((unsigned long)(69))
extern  fnServerTransactionUnlock_rets * fnrpc_fnservertransactionunlock_1();
#define	fnRpc_fnServerTransactionUnlockAll ((unsigned long)(70))
extern  fnServerTransactionUnlockAll_rets * fnrpc_fnservertransactionunlockall_1();
#define	fnRpc_fnServerTransactionUnlockAllAll ((unsigned long)(71))
extern  fnServerTransactionUnlockAllAll_rets * fnrpc_fnservertransactionunlockallall_1();
#define	fnRpc_fnShortMakeReadOnly ((unsigned long)(72))
extern  fnShortMakeReadOnly_rets * fnrpc_fnshortmakereadonly_1();
#define	fnRpc_fnServerTransactionBegin ((unsigned long)(73))
extern  fnServerTransactionBegin_rets * fnrpc_fnservertransactionbegin_1();
#define	fnRpc_fnServerTransactionCancel ((unsigned long)(74))
extern  fnServerTransactionCancel_rets * fnrpc_fnservertransactioncancel_1();
#define	fnRpc_fnServerTransactionEnd ((unsigned long)(75))
extern  fnServerTransactionEnd_rets * fnrpc_fnservertransactionend_1();
#define	fnRpc_fnServerTransactionFlush_batch ((unsigned long)(76))
extern  void * fnrpc_fnservertransactionflush_batch_1();
#define	fnRpc_fnServerDbTransactionP ((unsigned long)(77))
extern  fnServerDbTransactionP_rets * fnrpc_fnserverdbtransactionp_1();
#define	fnRpc_fnClientBtreeClear ((unsigned long)(78))
extern  fnClientBtreeClear_rets * fnrpc_fnclientbtreeclear_1();
#define	fnRpc_fnClientBtreeCount ((unsigned long)(79))
extern  fnClientBtreeCount_rets * fnrpc_fnclientbtreecount_1();
#define	fnRpc_fnServerBtreeDelete ((unsigned long)(80))
extern  fnServerBtreeDelete_rets * fnrpc_fnserverbtreedelete_1();
#define	fnRpc_fnServerBtreeDeleteByFloat ((unsigned long)(81))
extern  fnServerBtreeDeleteByFloat_rets * fnrpc_fnserverbtreedeletebyfloat_1();
#define	fnRpc_fnServerBtreeDeleteByDouble ((unsigned long)(82))
extern  fnServerBtreeDeleteByDouble_rets * fnrpc_fnserverbtreedeletebydouble_1();
#define	fnRpc_fnServerBtreeDeleteByString ((unsigned long)(83))
extern  fnServerBtreeDeleteByString_rets * fnrpc_fnserverbtreedeletebystring_1();
#define	fnRpc_fnServerBtreeInsert ((unsigned long)(84))
extern  fnServerBtreeInsert_rets * fnrpc_fnserverbtreeinsert_1();
#define	fnRpc_fnServerBtreeInsertByFloat ((unsigned long)(85))
extern  fnServerBtreeInsertByFloat_rets * fnrpc_fnserverbtreeinsertbyfloat_1();
#define	fnRpc_fnServerBtreeInsertByDouble ((unsigned long)(86))
extern  fnServerBtreeInsertByDouble_rets * fnrpc_fnserverbtreeinsertbydouble_1();
#define	fnRpc_fnServerBtreeInsertByString ((unsigned long)(87))
extern  fnServerBtreeInsertByString_rets * fnrpc_fnserverbtreeinsertbystring_1();
#define	fnRpc_fnServerBtreemapSearch ((unsigned long)(88))
extern  fnServerBtreemapSearch_rets * fnrpc_fnserverbtreemapsearch_1();
#define	fnRpc_fnServerBtreemapSearchByFloat ((unsigned long)(89))
extern  fnServerBtreemapSearchByFloat_rets * fnrpc_fnserverbtreemapsearchbyfloat_1();
#define	fnRpc_fnServerBtreemapSearchByDouble ((unsigned long)(90))
extern  fnServerBtreemapSearchByDouble_rets * fnrpc_fnserverbtreemapsearchbydouble_1();
#define	fnRpc_fnServerBtreemapSearchByString ((unsigned long)(91))
extern  fnServerBtreemapSearchByString_rets * fnrpc_fnserverbtreemapsearchbystring_1();
#define	fnRpc_fnServerBtreemapSeek ((unsigned long)(92))
extern  fnServerBtreemapSeek_rets * fnrpc_fnserverbtreemapseek_1();
#define	fnRpc_fnServerBtreemapSeekSet ((unsigned long)(93))
extern  fnServerBtreemapSeekSet_rets * fnrpc_fnserverbtreemapseekset_1();
#define	fnRpc_fnServerBtreemapFirst ((unsigned long)(94))
extern  fnServerBtreemapFirst_rets * fnrpc_fnserverbtreemapfirst_1();
#define	fnRpc_fnServerBtreemapFirstByFloat ((unsigned long)(95))
extern  fnServerBtreemapFirstByFloat_rets * fnrpc_fnserverbtreemapfirstbyfloat_1();
#define	fnRpc_fnServerBtreemapFirstByDouble ((unsigned long)(96))
extern  fnServerBtreemapFirstByDouble_rets * fnrpc_fnserverbtreemapfirstbydouble_1();
#define	fnRpc_fnServerBtreemapFirstByString ((unsigned long)(97))
extern  fnServerBtreemapFirstByString_rets * fnrpc_fnserverbtreemapfirstbystring_1();
#define	fnRpc_fnClientBtreemapNext ((unsigned long)(98))
extern  fnClientBtreemapNext_rets * fnrpc_fnclientbtreemapnext_1();
#define	fnRpc_fnClientBtreemapLast ((unsigned long)(99))
extern  fnClientBtreemapLast_rets * fnrpc_fnclientbtreemaplast_1();
#define	fnRpc_fnClientBtreePrint ((unsigned long)(100))
extern  fnClientBtreePrint_rets * fnrpc_fnclientbtreeprint_1();
#define	fnRpc_fnServerBtreeSearch ((unsigned long)(101))
extern  fnServerBtreeSearch_rets * fnrpc_fnserverbtreesearch_1();
#define	fnRpc_fnServerBtreeSearchByFloat ((unsigned long)(102))
extern  fnServerBtreeSearchByFloat_rets * fnrpc_fnserverbtreesearchbyfloat_1();
#define	fnRpc_fnServerBtreeSearchByDouble ((unsigned long)(103))
extern  fnServerBtreeSearchByDouble_rets * fnrpc_fnserverbtreesearchbydouble_1();
#define	fnRpc_fnServerBtreeSearchByString ((unsigned long)(104))
extern  fnServerBtreeSearchByString_rets * fnrpc_fnserverbtreesearchbystring_1();
#define	fnRpc_fnClientBtreeRoot ((unsigned long)(105))
extern  fnClientBtreeRoot_rets * fnrpc_fnclientbtreeroot_1();
#define	fnRpc_fnClientBtreeSize ((unsigned long)(106))
extern  fnClientBtreeSize_rets * fnrpc_fnclientbtreesize_1();
#define	fnRpc_fnClientBtreeTestMode ((unsigned long)(107))
extern  fnClientBtreeTestMode_rets * fnrpc_fnclientbtreetestmode_1();
#define	fnRpc_fnClientBtreePageSize ((unsigned long)(108))
extern  fnClientBtreePageSize_rets * fnrpc_fnclientbtreepagesize_1();
#define	fnRpc_fnClientBtreepageParent ((unsigned long)(109))
extern  fnClientBtreepageParent_rets * fnrpc_fnclientbtreepageparent_1();
#define	fnRpc_fnClientBtreepageCount ((unsigned long)(110))
extern  fnClientBtreepageCount_rets * fnrpc_fnclientbtreepagecount_1();
#define	fnRpc_fnClientBtreepageGetSize ((unsigned long)(111))
extern  fnClientBtreepageGetSize_rets * fnrpc_fnclientbtreepagegetsize_1();
#define	fnRpc_fnClientBtreepageItem ((unsigned long)(112))
extern  fnClientBtreepageItem_rets * fnrpc_fnclientbtreepageitem_1();
extern int plobd_1_freeresult();

/* the xdr functions */
extern bool_t xdr_GETVERSION();
extern bool_t xdr_MACHLOGINP();
extern bool_t xdr_LISPROOTIDX();
extern bool_t xdr_SHSYMBOLIDX();
extern bool_t xdr_SHFUNCTIONIDX();
extern bool_t xdr_SHTLATTERIDX();
extern bool_t xdr_SHTYPETAG();
extern bool_t xdr_ERRLVL();
extern bool_t xdr_GETACTION();
extern bool_t xdr_SHLOCK();
extern bool_t xdr_DAYLIGHTSAVINGTIME();
extern bool_t xdr_DEPENDENTMODE();
extern bool_t xdr_NUMERICSTDSTREAM();
extern bool_t xdr_FLUSHMODE();
extern bool_t xdr_FLAGMODE();
extern bool_t xdr_SHCONSIDX();
extern bool_t xdr_SHVECTORIDX();
extern bool_t xdr_IVECTORTAG();
extern bool_t xdr_IVECTORIDX();
extern bool_t xdr_SHARRAYIDX();
extern bool_t xdr_SHSTRINGIDX();
extern bool_t xdr_SHBITVECTORIDX();
extern bool_t xdr_SHSTRUCTIDX();
extern bool_t xdr_SHSTRUCTDESCIDX();
extern bool_t xdr_SHSTRUCTSLOTDESCIDX();
extern bool_t xdr_SHPACKAGEIDX();
extern bool_t xdr_SHINSTIDX();
extern bool_t xdr_SHPLOBDESCRIDX();
extern bool_t xdr_SHCLASSDESCRIDX();
extern bool_t xdr_SHCLASSLOTIDX();
extern bool_t xdr_SHDIRCLASSLOTIDX();
extern bool_t xdr_SHEFFCLASSLOTIDX();
extern bool_t xdr_SHMETHODIDX();
extern bool_t xdr_COMPARETAG();
extern bool_t xdr_TYPEFLAGS();
extern bool_t xdr_SHRATIOIDX();
extern bool_t xdr_SHCOMPLEXIDX();
extern bool_t xdr_SHBIGNUMIDX();
extern bool_t xdr_READONLYMODE();
extern bool_t xdr_SHHEAPIDX();
extern bool_t xdr_BTREERESULT();
extern bool_t xdr_SHBTREEIDX();
extern bool_t xdr_SEEK();
extern bool_t xdr_psint();
extern bool_t xdr_SHORTOBJID();
extern bool_t xdr_OBJID();
extern bool_t xdr_TRACTID();
extern bool_t xdr_as_is_vector_t();
extern bool_t xdr_void_vector_t();
extern bool_t xdr_int_vector_t();
extern bool_t xdr_u_int_vector_t();
extern bool_t xdr_float_vector_t();
extern bool_t xdr_double_vector_t();
extern bool_t xdr_string_t();
extern bool_t xdr_fnClientDbReadRoot_rets();
extern bool_t xdr_fnServerDbWriteRoot_rets();
extern bool_t xdr_fnServerDbWriteRoot_args();
extern bool_t xdr_fnClientDbSessions_rets();
extern bool_t xdr_fnServerGetVersion_rets();
extern bool_t xdr_fnServerGetVersion_args();
extern bool_t xdr_fnClientDbCreateMachine_rets();
extern bool_t xdr_fnClientDbCreateMachine_args();
extern bool_t xdr_fnClientMachineLoginP_rets();
extern bool_t xdr_fnClientMachineLoginP_args();
extern bool_t xdr_fnClientMachineAddr_rets();
extern bool_t xdr_fnClientMachineAddr_args();
extern bool_t xdr_fnClientDbMachineSearch_rets();
extern bool_t xdr_fnClientDbMachineSearch_args();
extern bool_t xdr_fnClientDbMachineDelete_rets();
extern bool_t xdr_fnClientDbMachineDelete_args();
extern bool_t xdr_fnClientDbMachineInsert_rets();
extern bool_t xdr_fnClientDbMachineInsert_args();
extern bool_t xdr_fnClientDbMachines_rets();
extern bool_t xdr_fnServerGetPortByDirectory_rets();
extern bool_t xdr_fnServerGetPortByDirectory_args();
extern bool_t xdr_fnServerGetPID_rets();
extern bool_t xdr_fnServerGetDirectory_rets();
extern bool_t xdr_fnServerGetDirectory_args();
extern bool_t xdr_fnServerExit_rets();
extern bool_t xdr_fnServerExit_args();
extern bool_t xdr_fnServerDbReset_rets();
extern bool_t xdr_fnServerDbReset_args();
extern bool_t xdr_fnServerRestart_rets();
extern bool_t xdr_fnServerRestart_args();
extern bool_t xdr_fnClientObjectCanModify_rets();
extern bool_t xdr_fnClientObjectCanModify_args();
extern bool_t xdr_fnServerDbClose_args();
extern bool_t xdr_fnClientDbConfiguration_rets();
extern bool_t xdr_fnServerDbCreateObject_rets();
extern bool_t xdr_fnServerDbCreateObject_args();
extern bool_t xdr_fnServerDbCreateObjects_rets();
extern bool_t xdr_fnServerDbCreateObjects_args();
extern bool_t xdr_fnServerObjectDestroy_args();
extern bool_t xdr_fnServerObjectObjIdSize_rets();
extern bool_t xdr_fnServerObjectObjIdSize_args();
extern bool_t xdr_fnServerDbOpen_rets();
extern bool_t xdr_fnServerDbOpen_args();
extern bool_t xdr_fnServerObjectFlush_rets();
extern bool_t xdr_fnServerObjectFlush_args();
extern bool_t xdr_fnServerObjectReadAtIndex_rets();
extern bool_t xdr_fnServerObjectReadAtIndex_args();
extern bool_t xdr_fnServerObjectReadAtIndices_rets();
extern bool_t xdr_fnServerObjectReadAtIndices_args();
extern bool_t xdr_fnServerObjectReadObjId_rets();
extern bool_t xdr_fnServerObjectReadObjId_args();
extern bool_t xdr_fnServerObjectReadValues_rets();
extern bool_t xdr_fnServerObjectReadValues_args();
extern bool_t xdr_fnClientDbStatistics_rets();
extern bool_t xdr_fnServerObjectTypeTag_rets();
extern bool_t xdr_fnServerObjectTypeTag_args();
extern bool_t xdr_fnServerObjectValueSize_rets();
extern bool_t xdr_fnServerObjectValueSize_args();
extern bool_t xdr_fnServerObjectWriteAtIndex_rets();
extern bool_t xdr_fnServerObjectWriteAtIndex_args();
extern bool_t xdr_fnServerObjectWriteAtIndices_rets();
extern bool_t xdr_fnServerObjectWriteAtIndices_args();
extern bool_t xdr_fnServerObjectWriteObjId_rets();
extern bool_t xdr_fnServerObjectWriteObjId_args();
extern bool_t xdr_fnServerObjectWriteValues_rets();
extern bool_t xdr_fnServerObjectWriteValues_args();
extern bool_t xdr_fnShortMakeDependent_rets();
extern bool_t xdr_fnShortMakeDependent_args();
extern bool_t xdr_fnServerObjectPeekSlots_rets();
extern bool_t xdr_fnServerObjectPeekSlots_args();
extern bool_t xdr_fnServerObjectPeekValues_rets();
extern bool_t xdr_fnServerObjectPeekValues_args();
extern bool_t xdr_fnServerObjectPoke_args();
extern bool_t xdr_fnFlushMode_rets();
extern bool_t xdr_fnFlushMode_args();
extern bool_t xdr_fnFlagWord_rets();
extern bool_t xdr_fnFlagWord_args();
extern bool_t xdr_fnShortMakeIVector_rets();
extern bool_t xdr_fnShortMakeIVector_args();
extern bool_t xdr_fnShortMakeString_rets();
extern bool_t xdr_fnShortMakeString_args();
extern bool_t xdr_fnServerDbCreateStructures_rets();
extern bool_t xdr_fnServerDbCreateStructures_args();
extern bool_t xdr_fnServerDbCreateInstances_rets();
extern bool_t xdr_fnServerDbCreateInstances_args();
extern bool_t xdr_fnServerInstanceWriteWrapper_rets();
extern bool_t xdr_fnServerInstanceWriteWrapper_args();
extern bool_t xdr_fnServerInstanceWriteData_rets();
extern bool_t xdr_fnServerInstanceWriteData_args();
extern bool_t xdr_fnServerDbTypeTagName_rets();
extern bool_t xdr_fnServerObjectPrettyPrint_rets();
extern bool_t xdr_fnServerObjectPrettyPrint_args();
extern bool_t xdr_fnShortPrintSymbol_rets();
extern bool_t xdr_fnShortPrintSymbol_args();
extern bool_t xdr_fnShortMakeSingleFloat_rets();
extern bool_t xdr_fnShortMakeSingleFloat_args();
extern bool_t xdr_fnShortMakeDoubleFloat_rets();
extern bool_t xdr_fnShortMakeDoubleFloat_args();
extern bool_t xdr_fnServerDbMakeBignum_rets();
extern bool_t xdr_fnServerDbMakeBignum_args();
extern bool_t xdr_fnServerObjectReadBignum_rets();
extern bool_t xdr_fnServerObjectReadBignum_args();
extern bool_t xdr_fnServerObjectReadDoubleFloat_rets();
extern bool_t xdr_fnServerObjectReadDoubleFloat_args();
extern bool_t xdr_fnServerObjectReadFixnum_rets();
extern bool_t xdr_fnServerObjectReadFixnum_args();
extern bool_t xdr_fnServerObjectReadSingleFloat_rets();
extern bool_t xdr_fnServerObjectReadSingleFloat_args();
extern bool_t xdr_fnServerObjectWriteBignum_rets();
extern bool_t xdr_fnServerObjectWriteBignum_args();
extern bool_t xdr_fnServerObjectWriteDoubleFloat_rets();
extern bool_t xdr_fnServerObjectWriteDoubleFloat_args();
extern bool_t xdr_fnServerObjectWriteFixnum_rets();
extern bool_t xdr_fnServerObjectWriteFixnum_args();
extern bool_t xdr_fnServerObjectWriteSingleFloat_rets();
extern bool_t xdr_fnServerObjectWriteSingleFloat_args();
extern bool_t xdr_fnClientLockPrint_rets();
extern bool_t xdr_fnClientLockPrint_args();
extern bool_t xdr_fnClientTransactionLockGet_rets();
extern bool_t xdr_fnClientTransactionLockGet_args();
extern bool_t xdr_fnServerTransactionLockInsert_rets();
extern bool_t xdr_fnServerTransactionLockInsert_args();
extern bool_t xdr_fnServerTransactionLockSet_rets();
extern bool_t xdr_fnServerTransactionLockSet_args();
extern bool_t xdr_fnServerTransactionUnlock_rets();
extern bool_t xdr_fnServerTransactionUnlock_args();
extern bool_t xdr_fnServerTransactionUnlockAll_rets();
extern bool_t xdr_fnServerTransactionUnlockAll_args();
extern bool_t xdr_fnServerTransactionUnlockAllAll_rets();
extern bool_t xdr_fnServerTransactionUnlockAllAll_args();
extern bool_t xdr_fnShortMakeReadOnly_rets();
extern bool_t xdr_fnShortMakeReadOnly_args();
extern bool_t xdr_fnServerTransactionBegin_rets();
extern bool_t xdr_fnServerTransactionBegin_args();
extern bool_t xdr_fnServerTransactionCancel_rets();
extern bool_t xdr_fnServerTransactionCancel_args();
extern bool_t xdr_fnServerTransactionEnd_rets();
extern bool_t xdr_fnServerTransactionEnd_args();
extern bool_t xdr_fnServerDbTransactionP_rets();
extern bool_t xdr_fnServerDbTransactionP_args();
extern bool_t xdr_fnClientBtreeClear_rets();
extern bool_t xdr_fnClientBtreeClear_args();
extern bool_t xdr_fnClientBtreeCount_rets();
extern bool_t xdr_fnClientBtreeCount_args();
extern bool_t xdr_fnServerBtreeDelete_rets();
extern bool_t xdr_fnServerBtreeDelete_args();
extern bool_t xdr_fnServerBtreeDeleteByFloat_rets();
extern bool_t xdr_fnServerBtreeDeleteByFloat_args();
extern bool_t xdr_fnServerBtreeDeleteByDouble_rets();
extern bool_t xdr_fnServerBtreeDeleteByDouble_args();
extern bool_t xdr_fnServerBtreeDeleteByString_rets();
extern bool_t xdr_fnServerBtreeDeleteByString_args();
extern bool_t xdr_fnServerBtreeInsert_rets();
extern bool_t xdr_fnServerBtreeInsert_args();
extern bool_t xdr_fnServerBtreeInsertByFloat_rets();
extern bool_t xdr_fnServerBtreeInsertByFloat_args();
extern bool_t xdr_fnServerBtreeInsertByDouble_rets();
extern bool_t xdr_fnServerBtreeInsertByDouble_args();
extern bool_t xdr_fnServerBtreeInsertByString_rets();
extern bool_t xdr_fnServerBtreeInsertByString_args();
extern bool_t xdr_fnServerBtreemapSearch_rets();
extern bool_t xdr_fnServerBtreemapSearch_args();
extern bool_t xdr_fnServerBtreemapSearchByFloat_rets();
extern bool_t xdr_fnServerBtreemapSearchByFloat_args();
extern bool_t xdr_fnServerBtreemapSearchByDouble_rets();
extern bool_t xdr_fnServerBtreemapSearchByDouble_args();
extern bool_t xdr_fnServerBtreemapSearchByString_rets();
extern bool_t xdr_fnServerBtreemapSearchByString_args();
extern bool_t xdr_fnServerBtreemapSeek_rets();
extern bool_t xdr_fnServerBtreemapSeek_args();
extern bool_t xdr_fnServerBtreemapSeekSet_rets();
extern bool_t xdr_fnServerBtreemapSeekSet_args();
extern bool_t xdr_fnServerBtreemapFirst_rets();
extern bool_t xdr_fnServerBtreemapFirst_args();
extern bool_t xdr_fnServerBtreemapFirstByFloat_rets();
extern bool_t xdr_fnServerBtreemapFirstByFloat_args();
extern bool_t xdr_fnServerBtreemapFirstByDouble_rets();
extern bool_t xdr_fnServerBtreemapFirstByDouble_args();
extern bool_t xdr_fnServerBtreemapFirstByString_rets();
extern bool_t xdr_fnServerBtreemapFirstByString_args();
extern bool_t xdr_fnClientBtreemapNext_rets();
extern bool_t xdr_fnClientBtreemapNext_args();
extern bool_t xdr_fnClientBtreemapLast_rets();
extern bool_t xdr_fnClientBtreemapLast_args();
extern bool_t xdr_fnClientBtreePrint_rets();
extern bool_t xdr_fnClientBtreePrint_args();
extern bool_t xdr_fnServerBtreeSearch_rets();
extern bool_t xdr_fnServerBtreeSearch_args();
extern bool_t xdr_fnServerBtreeSearchByFloat_rets();
extern bool_t xdr_fnServerBtreeSearchByFloat_args();
extern bool_t xdr_fnServerBtreeSearchByDouble_rets();
extern bool_t xdr_fnServerBtreeSearchByDouble_args();
extern bool_t xdr_fnServerBtreeSearchByString_rets();
extern bool_t xdr_fnServerBtreeSearchByString_args();
extern bool_t xdr_fnClientBtreeRoot_rets();
extern bool_t xdr_fnClientBtreeRoot_args();
extern bool_t xdr_fnClientBtreeSize_rets();
extern bool_t xdr_fnClientBtreeSize_args();
extern bool_t xdr_fnClientBtreeTestMode_rets();
extern bool_t xdr_fnClientBtreeTestMode_args();
extern bool_t xdr_fnClientBtreePageSize_rets();
extern bool_t xdr_fnClientBtreePageSize_args();
extern bool_t xdr_fnClientBtreepageParent_rets();
extern bool_t xdr_fnClientBtreepageParent_args();
extern bool_t xdr_fnClientBtreepageCount_rets();
extern bool_t xdr_fnClientBtreepageCount_args();
extern bool_t xdr_fnClientBtreepageGetSize_rets();
extern bool_t xdr_fnClientBtreepageGetSize_args();
extern bool_t xdr_fnClientBtreepageItem_rets();
extern bool_t xdr_fnClientBtreepageItem_args();

#endif /* !_PLOBD_H_RPCGEN */
