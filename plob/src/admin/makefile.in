/* ----------------------------------------------------------------------
|
|		PLOB - Persistent Lisp OBjects
|		       =	  =    ==
|
| Script	Makefile
| Targets		all:
|		Default target.
| Description	Makefile for PLOBs admin utility.
|
| Copyright	PLOB! Copyright 1994--2002 Heiko Kirschke.
|		All rights reserved.
|
| Unlimited use, reproduction, modification and distribution of this
| software is permitted.  Any copy or modified version of this
| software must include both the above copyright notice of
| Heiko Kirschke and this paragraph; for each modified version, an
| additional statement must be added telling the year of modification
| and quoting the author of the modification.  Any distribution of
| this software must comply with all applicable German export control
| laws.  This software is made available AS IS, and HEIKO KIRSCHKE
| DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT
| LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
| A PARTICULAR PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION
| CONTAINED HEREIN, ANY LIABILITY FOR DAMAGES RESULTING FROM THE
| SOFTWARE OR ITS USE IS EXPRESSLY DISCLAIMED, WHETHER ARISING IN
| CONTRACT, TORT (INCLUDING NEGLIGENCE) OR STRICT LIABILITY, EVEN IF
| HEIKO KIRSCHKE IS ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
|
| Please note that these license terms adhere only to the code of
| PLOB!  itself. PLOB! uses POSTORE (Persistent Object Store) as a
| low-level persistent memory; it is provided in binary form within
| PLOB! with the permission of the University of St. Andrews
| (http://www-ppg.dcs.st-andrews.ac.uk/Default.html).  Contact the
| University of St. Andrews for getting their license terms on
| POSTORE.
|
| $Header$
|
 ---------------------------------------------------------------------- */

/* #define	ccLocalOptions	paste5(-,D,USEDLL,=,1) */
#define	relPlobDir	ddot slash ddot
#include		"../../conf/make.rules.in"

/* ----------------------------------------------------------------------
| Settings for this makefile
 ---------------------------------------------------------------------- */

/* CFLAGS=$(COPTDEB) */
CFLAGS=$(COPTDEB) $(COPTOPT)

STDINCLUDE=\
 $(SRCIDIR) slash fileH(c2c) spc \
 $(SRCIDIR) slash fileH(global) spc \
 $(SRCIDIR) slash fileH(hash) spc \
 $(SRCIDIR) slash fileH(generic) spc \
 $(SRCIDIR) slash fileH(plob)

OBJECTS=trim($(opsys) slash fileObj(plobdadmin))

LIBCLIENTPLOB=trim(fileLib(librpclientplob))

/* ----------------------------------------------------------------------
| Main targets
 ---------------------------------------------------------------------- */
drule ( all, \
	$(BINDIR) slash $(opsys) slash fileExe(plobdadmin), \
	noActions )

/* ----------------------------------------------------------------------
| Sub targets
 ---------------------------------------------------------------------- */

rule ( $(opsys) slash fileObj(plobdadmin), \
       fileC(plobdadmin) spc fileH(plobdadmin) spc \
       $(STDINCLUDE), \
       $(COMPILEc) $(OUTPUT_OPTION_OBJ) \
       option1(I dot) spc \
       option1(I ddot slash client) spc \
       option1(I ddot slash client slash $(opsys)) spc \
       fileC(plobdadmin) )

/* ----------------------------------------------------------------------
| Linking
 ---------------------------------------------------------------------- */

#if HasOpSys == hasWin32

rule ( $(opsys) slash plobdadmin dot res, \
       plobdadmin dot rc spc \
       ddot slash server slash mop dash inside dot ico spc \
       $(SRCIDIR) slash fileH(plobversion), \
       rc option1(r) option2(fo,ruleTarget) spc \
       option1(I$(SRCIDIR)) spc \
       option1(I$(MSVCPATH) slash mfc slash include) spc \
       option1(I$(MSVCPATH) slash include plobdadmin dot rc) )

rule ( $(BINDIR) slash $(opsys) slash fileExe(plobdadmin), \
       $(OBJECTS) spc \
       $(LIBDIR) slash $(LIBCLIENTPLOB) spc \
       $(opsys) slash plobdadmin dot res, \
       LinkExe($(OBJECTS) spc $(opsys) slash plobdadmin dot res spc \
	       $(LIBCLIENTPLOB) spc \
               paste4(-,map,:,$(BINDIR) slash $(opsys) slash plobdadmin dot map)))

#else

rule ( $(BINDIR) slash $(opsys) slash fileExe(plobdadmin), \
       $(OBJECTS) spc $(LIBDIR) slash $(LIBCLIENTPLOB), \
       LinkExe($(OBJECTS) spc \
	       $(LIBDIR) slash $(LIBCLIENTPLOB)))

#endif

/* ----------------------------------------------------------------------
| Standard targets
 ---------------------------------------------------------------------- */
drule ( initial, \
	$(opsys), \
	noActions )
drule ( $(STDTARGETS), \
	noDependencies, \
	silent $(MAKE) default dash ruleTarget )

/*
  Local variables:
  buffer-file-coding-system: raw-text-unix
  End:
*/
