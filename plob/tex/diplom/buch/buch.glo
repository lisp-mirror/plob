\glossaryentry{{Abbbruch einer Transaktion\protect \ ({\protect \em abort\protect \/})}{Damit gilt der aus den w\"{a}hrend der Transaktion erfolgten Modifikationen hervorgegangene Gesamtzustand der Datenbank als inkonsistent; der Gesamtzustand wird daher \protect \gande {auf den letzten konsistenten Stand bei Beginn der Transaktion zur\"{u}ckgebracht}{\protect \see {rollback}}.}}{105}
\glossaryentry{{abort}{$\protect \rightarrow $Abbbruch einer Transaktion}}{105}
\glossaryentry{{Absichtssperre\protect \ ({\protect \em intent lock\protect \/})}{Eine Absichtssperre repr\"{a}sentiert beim \protect \see {hierar\discretionary {-}{}{}chi\discretionary {-}{}{}schem Sperrprotokoll}\ die Absicht eines sperrenden Objektes, auf einer tieferen Ebene eine entsprechende Sperre vornehmen zu wollen. Wenn beispielsweise die Sperrebenen \protect \rglq {}Speicher\protect \rgrq \ -- \protect \rglq {}Vektor\protect \rgrq \ -- \protect \rglq {}Komponente eines Vektors\protect \rgrq \ gegeben sind, wird mit einer Leseabsichtssperre auf der Ebene \protect \rglq {}Speicher\protect \rgrq \ die Absicht angezeigt, auf einer der Ebenen \protect \rglq {}Vektor\protect \rgrq \ oder \protect \rglq {}Komponente eines Vektors\protect \rgrq \ eine Lesesperre setzen zu wollen.}}{107}
\glossaryentry{{ACID}{Abk\"{u}rzung f\"{u}r die vier Eigenschaften einer Datenbank-Transaktion: \protect \gande {\protect \see {Un\discretionary {-}{}{}teil\discretionary {-}{}{}bar\discretionary {-}{}{}keit}}{atomicity}, \protect \gande {\protect \see {Kon\discretionary {-}{}{}si\discretionary {-}{}{}stenz}}{consistency}, \protect \gande {\protect \see {Se\discretionary {-}{}{}ria\discretionary {-}{}{}li\discretionary {-}{}{}sier\discretionary {-}{}{}bar\discretionary {-}{}{}keit}}{isolation}\ und \protect \gande {\protect \see {Be\discretionary {-}{}{}st\"{a}n\discretionary {-}{}{}dig\discretionary {-}{}{}keit}}{durability}.}}{93}
\glossaryentry{{Aktiv-persistente Instanz}{Eine \protect \clos -Instanz, deren \protect \clsmc \ auf Persistenz spezialisiert ist.}}{63}
\glossaryentry{{Aktiv-persistente Klasse}{Eine Klasse, die durch ein \protect \clsmo \ einer auf Persistenz {\protect \spc [n]}\ \protect \clsmc \ repr\"{a}sentiert wird.}}{63}
\glossaryentry{{Aktive Instanz}{Bei einer aktiven Instanz kann eine \"{A}nderung oder Erweiterung ihrer Semantik (Erweiterung um Persistenz in diesem Rahmen) grund\discretionary {-}{}{}s\"{a}tz\discretionary {-}{}{}lich mittels der {\protect \em vorhandenen\/}, in \protect \cite {bib:st90} und \protect \cite {bib:amop91} definierten generischen {\protect \std -\protect \fn [en]} eingebunden werden; in \protect \cl \ sind alle \protect \clos -Instanzen aktive Instanzen.}}{61}
\glossaryentry{{Allozierungsart eines \protect \Slt [s]\protect \ ({\protect \em slot allocation\protect \/})}{Die Allozierungsart eines \protect \Slt [s]\/ bestimmt, wie der \protect \Slt \/-Zustand von \protect \clos \ repr\"{a}sentiert werden soll. F\"{u}r die Art \protect \lisp {:in\discretionary {-}{}{}stan\discretionary {-}{}{}ce}\ wird der \protect \Slt \/-Zustand f\"{u}r jede Instanz repr\"{a}sentiert, f\"{u}r die Art \protect \lisp {:class}\ wird der \protect \Slt \/-Zustand genau einmal repr\"{a}sentiert, f\"{u}r alle anderen Allozierungsarten wird der \protect \Slt \/-Zustand nicht von \protect \clos \ repr\"{a}sentiert.}}{117}
\glossaryentry{{array information function}{$\protect \rightarrow $Feld-Informationsfunktion}}{143}
\glossaryentry{{atomicity}{$\protect \rightarrow $Unteilbarkeit}}{93}
\glossaryentry{{Backend-Proze\ss {}}{Datenbank-bearbeitender \protect \unix \ Proze\ss {}; er verarbeitet die vom {\protect \see {\protect \em  Front\discretionary {-}{}{}end\/}}-Pro\discretionary {-}{}{}ze\ss {} kommenden Datenbank-Anfragen.}}{79}
\glossaryentry{{Basisklasse\protect \ ({\protect \em built-in class\protect \/})}{Eine Basisklasse ist eine in das LISP-System \protect \gande {\protect \rglq {}eingebaute\protect \rgrq }{built-in}\ Klasse, zu der im Gegensatz zu allgemeinen Klassen keine Subklassen spezialisiert werden k\"{o}nnen. Ebenso wird auf den Zustand der Instanzen von Basisklassen nicht mit \protect \mtd [n], sondern mit \protect \fn [en]\ zugegriffen; damit entf\"{a}llt ebenfalls die M\"{o}g\discretionary {-}{}{}lich\discretionary {-}{}{}keit, die \protect \std -Zugriffs-\protect \mtd [n]\ weiter spezialisieren zu k\"{o}nnen.}}{5}
\glossaryentry{{Best\"{a}ndigkeit\protect \ ({\protect \em durability\protect \/})}{Die 4.\ Eigenschaft der \protect \acid -Eigenschaften f\"{u}r Da\discretionary {-}{}{}ten\discretionary {-}{}{}bank-Trans\discretionary {-}{}{}ak\discretionary {-}{}{}tio\discretionary {-}{}{}nen: Nach \protect \gande {Ende einer Transaktion}{\protect \see {commit}}\ \"{u}berstehen die Zu\discretionary {-}{}{}stands\discretionary {-}{}{}\"{a}n\discretionary {-}{}{}de\discretionary {-}{}{}run\discretionary {-}{}{}gen Systemausf\"{a}lle.}}{94}
\glossaryentry{{built-in class}{$\protect \rightarrow $Basisklasse}}{5}
\glossaryentry{{clustering}{Nahe Gruppierung von Objekten bei ihren referenzierten Objekten.}}{49}
\glossaryentry{{commit}{$\protect \rightarrow $Ende einer Transaktion}}{94}
\glossaryentry{{compiler}{\"{U}bersetzer.}}{50}
\glossaryentry{{consistency}{$\protect \rightarrow $Konsistenz}}{93}
\glossaryentry{{dangling reference}{$\protect \rightarrow $Ung\"{u}ltige Referenz}}{47}
\glossaryentry{{deadlock}{Verklemmung.}}{107}
\glossaryentry{{debugger}{Programm zur Fehlersuche; kontrolliert den Ablauf des zu untersuchenden Programms und f\"{a}ngt dessen Laufzeitfehler ab.}}{92}
\glossaryentry{{displaced array}{Ein {\protect \em displaced array\/} ist ein Feld, das Elemente eines anderen Feldes referenziert. Jeder Zugriff auf ein Feldelement liest bzw.\ schreibt ein Element des referenzierten Feldes.}}{143}
\glossaryentry{{displaced index offset}{Der erste Index f\"{u}r ein \protect \gande {Feld, da\ss {} ein anderes Feld referenziert}{\protect \see {displaced array}}\ des gemeinsam referenzierten Teils.}}{143}
\glossaryentry{{durability}{$\protect \rightarrow $Best\"{a}ndigkeit}}{94}
\glossaryentry{{Ende einer Transaktion\protect \ ({\protect \em commit\protect \/})}{Damit gilt der aus den w\"{a}hrend der Transaktion erfolgten Modifikationen hervorgegangene Gesamtzustand der Datenbank als konsistent.}}{94}
\glossaryentry{{Endlos-Schleife\protect \global \protect \@glossarypagenofalse }{\protect \see {Schleife, Endlos-\protect \td }}}{167}
\glossaryentry{{exclusive mode}{$\protect \rightarrow $Exklusiver Sperrmodus}}{106}
\glossaryentry{{Exklusiver Sperrmodus\protect \ ({\protect \em exclusive mode\protect \/})}{Ein Modus, der nur einem sperrenden Objekt Zugriff auf eine gesperrte Instanz erlaubt.}}{106}
\glossaryentry{{extent}{Lebensdauer.}}{117}
\glossaryentry{{Feld-Informationsfunktion\protect \ ({\protect \em array information function\protect \/})}{Eine Feld-\protect \discretionary {}{}{}In\discretionary {-}{}{}for\discretionary {-}{}{}ma\discretionary {-}{}{}ti\discretionary {-}{}{}ons\discretionary {-}{}{}funk\discretionary {-}{}{}tion liefert Informationen \"{u}ber ein LISP Datenobjekt der Klasse \protect \gande {Feld}{array}, wie z.B.\ die Anzahl Feldelemente, eine Liste der Felddimensionen, den Elementtyp, f\"{u}r den das Feld spezialisiert wurde usw.}}{143}
\glossaryentry{{finalized}{Endg\"{u}ltig abgeschlossene Initialisierung eines \protect \clsmo [es]\ oder \protect \clsdo [es].}}{121}
\glossaryentry{{flag}{Statusvariable.}}{121}
\glossaryentry{{Freizeiten\protect \ ({\protect \em idle time\protect \/})}{Zeitabschnitte, in denen kein Proze\ss {} aktiv ist.}}{47}
\glossaryentry{{Frontend-Proze\ss {}}{Datenbank-benutzender \protect \unix \ Proze\ss {}; er startet einen {\protect \see {\protect \em Back\discretionary {-}{}{}end\/}}-Pro\discretionary {-}{}{}ze\ss {}, sendet ihm die Datenbank-Anfragen und gibt die Antworten an das in den h\"{o}heren Schichten des {\protect \em Frontend\/}-Prozesses laufende von den BenutzerInnen erstellte Programm weiter.}}{79}
\glossaryentry{{garbage collection}{$\protect \rightarrow $Speicherr\"{u}ckgewinnung}}{46}
\glossaryentry{{Generische Standard-Lese-Funktion\protect \ ({\protect \em standard reader generic function\protect \/})}{Alle in\protect \\\protect \amopcite {212--224}\ definierten generischen \protect \Std -Lese-\protect \fn [en].}}{114}
\glossaryentry{{Gro\ss {}es Objekt\protect \ ({\protect \em large object\protect \/})}{Ein gro\ss {}es Objekt ist ein Objekt innerhalb einer relationalen Datenbank, das die maximale Tupelgr\"{o}\ss {}e \"{u}berschreitet; beispielsweise ist in \protect \postgres \ die maximale Gr\"{o}\ss {}e eines Tupels auf 8\protect ~KByte beschr\"{a}nkt.}}{78}
\glossaryentry{{Hierarchisches Sperrprotokoll\protect \ ({\protect \em tree locking\protect \/})}{Das hierarchische Sperrprotokoll impliziert mit dem \protect \see {Sperren}\ eines Objektes auf einer Ebene mit einem Modus denselben Sperrmodus f\"{u}r alle Unterebenen. Wenn beispielsweise die Sperrebenen \protect \rglq {}Speicher\protect \rgrq \ -- \protect \rglq {}Vektor\protect \rgrq \ -- \protect \rglq {}Komponente eines Vektors\protect \rgrq \ gegeben sind, impliziert eine Lesesperre auf der Ebene \protect \rglq {}Speicher\protect \rgrq \ Lesesperren f\"{u}r alle weiteren unteren Ebenen \protect \rglq {}Vektor\protect \rgrq \ (d.h.\ f\"{u}r {\protect \em alle\/} Vektoren) und \protect \rglq {}Komponente eines Vektors\protect \rgrq .}}{106}
\glossaryentry{{Hypothetische Transaktion}{Eine hypothetische Transaktion ist eine Transaktion, die bei Ende immer abgebrochen wird; sie kann z.B.\ f\"{u}r Entwicklungsarbeiten genutzt werden, deren Ergebnisse niemals persistent gehalten werden sollen.}}{106}
\glossaryentry{{idle time}{$\protect \rightarrow $Freizeiten}}{47}
\glossaryentry{{Immediate}{Ein \protect \immval \/ ist ein Wert, dessen Zustand direkt in einer Iden\discretionary {-}{}{}ti\discretionary {-}{}{}t\"{a}ts\discretionary {-}{}{}re\discretionary {-}{}{}pr\"{a}\discretionary {-}{}{}sen\discretionary {-}{}{}tat\discretionary {-}{}{}ion repr\"{a}sentiert werden kann.}}{5}
\glossaryentry{{initarg}{$\protect \rightarrow $Initialisierungs-Argumentname}}{117}
\glossaryentry{{initform}{$\protect \rightarrow $Initialisierungsausdruck}}{117}
\glossaryentry{{initfunction}{$\protect \rightarrow $Initialisierungsfunktion}}{117}
\glossaryentry{{Initialisierungs-Argumentname\protect \ ({\protect \em initarg\protect \/})}{Ein Initialisierungs-Argumentname wird zur Initialisierung eines \protect \Slt [s]\/ bei der Erzeugung eines Struktur- oder \protect \clos -Objektes als Schl\"{u}s\discretionary {-}{}{}sel eines \protect \gande {Schl\"{u}sselwort-Parameters}{\protect \&key parameter}\ zusammen mit dem Initialisierungswert an die ob\discretionary {-}{}{}jekt-er\discretionary {-}{}{}zeu\discretionary {-}{}{}gen\discretionary {-}{}{}de Funktion \"{u}bergeben.}}{117}
\glossaryentry{{Initialisierungsausdruck\protect \ ({\protect \em initform\protect \/})}{LISP Ausdruck, dessen Evaluierung im Verlauf der Initialisierung eines \protect \Slt [s]\/ eines \protect \clos -Objektes als Initialisierungswert verwendet wird. Nicht der Initialisierungsausdruck selbst wird zur Initialisierung benutzt, sondern eine aus ihm durch eine \"{U}bersetzung erzeugte \protect \gande {Initialisierungsfunktion}{\protect \see {initfunction}}.}}{117}
\glossaryentry{{Initialisierungsfunktion\protect \ ({\protect \em initfunction\protect \/})}{LISP Funktion ohne Ar\discretionary {-}{}{}gu\discretionary {-}{}{}men\discretionary {-}{}{}te, deren R\"{u}ck\discretionary {-}{}{}ga\discretionary {-}{}{}be\discretionary {-}{}{}wert im Verlauf der Initialisierung eines \protect \Slt [s]\/ eines \protect \clos -Objektes als Initialisierungswert verwendet wird. Die Initialisierungsfunktion wird w\"{a}hrend der Klasseninitialisierung durch eine \"{U}bersetzung aus dem \protect \gande {Initialisierungsausdruck}{\protect \see {initform}}\ gewonnen.}}{117}
\glossaryentry{{intent lock}{$\protect \rightarrow $Absichtssperre}}{107}
\glossaryentry{{isolation}{$\protect \rightarrow $Serialisierbarkeit}}{93}
\glossaryentry{{keyword symbol}{$\protect \rightarrow $Schl\"{u}sselwort-Symbol}}{117}
\glossaryentry{{Konsistenz\protect \ ({\protect \em consistency\protect \/})}{Die 2.\ Eigenschaft der \protect \acid -Eigenschaften f\"{u}r Da\discretionary {-}{}{}ten\discretionary {-}{}{}bank-Trans\discretionary {-}{}{}ak\discretionary {-}{}{}tio\discretionary {-}{}{}nen: Eine Transaktion ist eine korrekte Zu\discretionary {-}{}{}stands\discretionary {-}{}{}\"{a}n\discretionary {-}{}{}de\discretionary {-}{}{}rung. Die zu einer Gruppe zusammengefa\ss {}ten Aktionen verletzen keinerlei In\discretionary {-}{}{}te\discretionary {-}{}{}gri\discretionary {-}{}{}t\"{a}ts\discretionary {-}{}{}be\discretionary {-}{}{}schr\"{a}n\discretionary {-}{}{}kun\discretionary {-}{}{}gen des Zustands.}}{93}
\glossaryentry{{large object}{$\protect \rightarrow $Gro\ss {}es Objekt}}{78}
\glossaryentry{{locking}{$\protect \rightarrow $Objektsperre}}{106}
\glossaryentry{{Lokalisierung von Objekten}{Auswahl von persistenten Objekten aus dem persistenten Speicher anhand von Kriterien, wie z.B.\ nach dem Namen des Objektes oder nach bestimmten \protect \Slt \/-Zust\"{a}nden.}}{68}
\glossaryentry{{Nicht-exklusiver Sperrmodus\protect \ ({\protect \em shared mode\protect \/})}{Ein Modus, der mehreren sperrenden Objekten Zugriff auf eine gesperrte Instanz erlaubt.}}{106}
\glossaryentry{{Objekt-Swizzling}{Abbildung zwischen einer transienten und einer persistenten Repr\"{a}sentation eines persistenten Objektes.}}{67}
\glossaryentry{{Objektsperre\protect \ ({\protect \em locking\protect \/})}{Vor der Dereferenzierung des Objektzustands wird das Objekt mit einem der \protect \gande {\protect \see {nicht-ex\discretionary {-}{}{}klu\discretionary {-}{}{}si\discretionary {-}{}{}ven Sperrmodi}}{shared mode}\ \protect \gande {Nur-Lesen}{read-only}, \protect \gande {Lesen}{read}\ oder dem \protect \gande {\protect \see {exklusivem Sperrmodus}}{exclusive mode}\ \protect \gande {Schreiben}{write}\ durch ein sperrendes Objekt (\protect \ia \ eine \protect \see {Sitzung}) f\"{u}r den Zugriff durch andere Instanzen gesperrt.}}{106}
\glossaryentry{{Passiv-persistente Instanz}{Eine nicht \protect \see {aktiv-persistente Instanz}.}}{63}
\glossaryentry{{Passiv-persistente Klasse}{Eine nicht \protect \see {aktiv-persistente Klasse}.}}{63}
\glossaryentry{{Passives Objekt}{Eine nicht \protect \see {aktive Instanz}. In \protect \cl \ sind alle Objekte der Basis- und Struktur-Klassen passive Objekte.}}{63}
\glossaryentry{{Pointer-Swizzling}{Konvertierung einer persistenten Identit\"{a}tsrepr\"{a}sentation in eine Adresse.}}{22}
\glossaryentry{{rollback}{Zur\"{u}cksetzen der Datenbank auf den Zustand bei Beginn der Transaktion nach Abbruch einer Datenbank-Transaktion.}}{105}
\glossaryentry{{Schleife, Endlos-\protect \td \protect \global \protect \@glossarypagenofalse }{\protect \see {Endlos-Schleife}\protect \footnote {-- Random Shack Data Processing Dictionary}}}{167}
\glossaryentry{{Schl\"{u}sselwort-Symbol\protect \ ({\protect \em keyword symbol\protect \/})}{Jedes Schl\"{u}sselwort-Symbol ist per Definition immer global sichtbar und hat sich selbst als Wert.}}{117}
\glossaryentry{{Schreibsperre}{Markierung eines Objektes als \protect \rglq {}gesperrt\protect \rgrq , um anderen zugreifenden Instanzen zu signalisieren, da\ss {} der Objektzustand schreibend referenziert wird.}}{94}
\glossaryentry{{Schwache Referenz\protect \ ({\protect \em weak pointer\protect \/})}{Schwache Referenzen werden zur Laufzeit wie normale Referenzen angesehen. W\"{a}hrend der \protect \see {Speicherr\"{u}ckgewinnung}\ werden schwache Referenzen nicht ber\"{u}cksichtigt, d.h.\ Objekte, die nur \"{u}ber schwache Referenzen erreichbar sind, gelten als nicht-erreichbar.}}{56}
\glossaryentry{{Selbstbeschreibendes System\protect \ ({\protect \em self-descriptive\protect \/})}{Ein Objektsystem ist selbst-be\discretionary {-}{}{}schrei\discretionary {-}{}{}bend, wenn Struktur und Verhalten aller Instanzen entweder als \protect \gande {\protect \rglq {}eingebaut\protect \rgrq }{built-in}\ definiert ist oder anderweitig vom Objektsystem erfragt werden kann.}}{57}
\glossaryentry{{self-descriptive}{$\protect \rightarrow $Selbstbeschreibendes System}}{57}
\glossaryentry{{Serialisierbarkeit\protect \ ({\protect \em isolation\protect \/})}{Die 3.\ Eigenschaft der \protect \acid -Eigenschaften f\"{u}r Da\discretionary {-}{}{}ten\discretionary {-}{}{}bank-Trans\discretionary {-}{}{}ak\discretionary {-}{}{}tio\discretionary {-}{}{}nen: Auch bei gleichzeitig laufenden Transaktionen sieht es f\"{u}r jede Transaktion {\protect \it  T} so aus, als ob andere Transaktionen entweder vor {\protect \it  T} oder nach {\protect \it  T} ausgef\"{u}hrt w\"{u}r\discretionary {-}{}{}den.}}{93}
\glossaryentry{{session}{$\protect \rightarrow $Sitzung}}{104}
\glossaryentry{{shared mode}{$\protect \rightarrow $Nicht-exklusiver Sperrmodus}}{106}
\glossaryentry{{Sitzung\protect \ ({\protect \em session\protect \/})}{Eine Folge von zeitlich disjunkten Da\discretionary {-}{}{}ten\discretionary {-}{}{}bank-Trans\discretionary {-}{}{}ak\discretionary {-}{}{}tio\discretionary {-}{}{}nen sowie einem Proze\ss {}, der innerhalb einer Transaktion auf persistente Objekte zugreifen kann.}}{104}
\glossaryentry{{slot allocation}{$\protect \rightarrow $Allozierungsart eines \protect \Slt [s]}}{117}
\glossaryentry{{Speicherr\"{u}ckgewinnung\protect \ ({\protect \em garbage collection\protect \/})}{Freigabe des Speicherplatzes von nicht-erreichbaren Objekten.}}{46}
\glossaryentry{{standard reader generic function}{$\protect \rightarrow $Generische Standard-Lese-Funktion}}{114}
\glossaryentry{{time out}{Ablauf einer bestimmten Wartezeit.}}{107}
\glossaryentry{{tree locking}{$\protect \rightarrow $Hierarchisches Sperrprotokoll}}{106}
\glossaryentry{{two-phased transaction}{$\protect \rightarrow $Zwei-Phasen-Transaktion}}{72}
\glossaryentry{{type tag}{$\protect \rightarrow $Typkennung}}{97}
\glossaryentry{{Typkennung\protect \ ({\protect \em type tag\protect \/})}{Numerischer Wert, der den Typ eines Objektes eineindeutig identifiziert.}}{97}
\glossaryentry{{Ung\"{u}ltige Referenz\protect \ ({\protect \em dangling reference\protect \/})}{Eine un\discretionary {-}{}{}g\"{u}l\discretionary {-}{}{}ti\discretionary {-}{}{}ge Referenz ist eine Iden\discretionary {-}{}{}ti\discretionary {-}{}{}t\"{a}ts\discretionary {-}{}{}re\discretionary {-}{}{}pr\"{a}\discretionary {-}{}{}sen\discretionary {-}{}{}ta\discretionary {-}{}{}tion, die kein g\"{u}ltiges Objekt referenziert.}}{47}
\glossaryentry{{Unteilbarkeit\protect \ ({\protect \em atomicity\protect \/})}{Die 1.\ Eigenschaft der \protect \acid -Eigenschaften f\"{u}r Da\discretionary {-}{}{}ten\discretionary {-}{}{}bank-Trans\discretionary {-}{}{}ak\discretionary {-}{}{}tio\discretionary {-}{}{}nen: Die von einer Transaktion vorgenommenen Zu\discretionary {-}{}{}stands\discretionary {-}{}{}\"{a}n\discretionary {-}{}{}de\discretionary {-}{}{}run\discretionary {-}{}{}gen sind unteilbar. }}{93}
\glossaryentry{{weak pointer}{$\protect \rightarrow $Schwache Referenz}}{56}
\glossaryentry{{well-formed transaction}{$\protect \rightarrow $Wohlgeformte Transaktion}}{106}
\glossaryentry{{Wohlgeformte Transaktion\protect \ ({\protect \em well-formed transaction\protect \/})}{In einer wohlgeformten Transaktion sind die Objekte f\"{u}r den Zugriff auf ihren Zustand durch die dereferenzierende Instanz (\protect \ia \ eine \protect \see {Sit\discretionary {-}{}{}zung}) gesperrt. Damit in einer Transaktion \protect \see {Se\discretionary {-}{}{}ria\discretionary {-}{}{}li\discretionary {-}{}{}sier\discretionary {-}{}{}bar\discretionary {-}{}{}keit}\ gew\"{a}hrleistet wird, mu\ss {} die Transaktion wohlgeformt sein.}}{106}
\glossaryentry{{Zwei-Phasen-Transaktion\protect \ ({\protect \em two-phased transaction\protect \/})}{In einer \protect \twophasetr \ werden in der ersten Phase die Objekte, auf die zugegriffen werden soll, durch die zugreifende Transaktion f\"{u}r alle konkurrenten Transaktionen gesperrt; die zweite Phase, in der f\"{u}r die zugreifende Transaktion keine neuen Sperren gesetzt werden d\"{u}rfen, beginnt mit der ersten Aufhebung einer ihrer Sperren. Damit wird \protect \see {Se\discretionary {-}{}{}ria\discretionary {-}{}{}li\discretionary {-}{}{}sier\discretionary {-}{}{}bar\discretionary {-}{}{}keit}\ gew\"{a}hrleistet.}}{72}
